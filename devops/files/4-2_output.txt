
*** This output was created by 4-2_export.sh on Tue Jul 15 13:43:43 UTC 2025 ***

VALIDATING
    Validating gcc
        [✓] gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    Validating glibc
        [✓] ldd (Ubuntu GLIBC 2.35-0ubuntu3.10) 2.35
    Validating Check
        [✓] Check unit test version: (0) (15) (2)
    Validating musl-gcc
        [✓] x86_64-linux-gnu-gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0

CLEANING
    Cleaning dist/ directory

COMPILING
    Compiling: src/devops_code.c
    Compiling: src/skid_assembly.c
    Compiling: src/skid_clone.c
    Compiling: src/skid_dir_operations.c
    Compiling: src/skid_file_control.c
    Compiling: src/skid_file_descriptors.c
    Compiling: src/skid_file_link.c
    Compiling: src/skid_file_metadata_read.c
    Compiling: src/skid_file_metadata_write.c
    Compiling: src/skid_file_operations.c
    Compiling: src/skid_memory.c
    Compiling: src/skid_network.c
    Compiling: src/skid_signal_handlers.c
    Compiling: src/skid_signals.c
    Compiling: src/skid_time.c
    Compiling: src/skid_validation.c
    Compiling: src/unit_test_code.c
    Compiling manual test object code: dist/test_devops_code_create_path_tree.o
    Linking manual test binary: dist/test_devops_code_create_path_tree.bin
    Compiling manual test object code: dist/test_devops_code_get_compatible_gid.o
    Linking manual test binary: dist/test_devops_code_get_compatible_gid.bin
    Compiling manual test object code: dist/test_feature_test_macros.o
    Linking manual test binary: dist/test_feature_test_macros.bin
    Compiling manual test object code: dist/test_libskid_sa_read_cpu_tsc.o
    Linking manual test binary against libsketchyidea: dist/test_libskid_sa_read_cpu_tsc.bin
    Compiling manual test object code: dist/test_libskid_sdo_read_dir_contents.o
    Linking manual test binary against libsketchyidea: dist/test_libskid_sdo_read_dir_contents.bin
    Compiling manual test object code: dist/test_libskid_sfmr_get_file_perms.o
    Linking manual test binary against libsketchyidea: dist/test_libskid_sfmr_get_file_perms.bin
    Statically compiling bespoke binary: dist/test_misc_glibc_vs_musl-static_glibc.bin
    Statically compiling bespoke binary: dist/test_misc_glibc_vs_musl-static_musl.bin
    Compiling manual test object code: dist/test_misc_packed_macro.o
    Linking manual test binary: dist/test_misc_packed_macro.bin
    Compiling manual test object code: dist/test_misc_setjmp_longjmp.o
    Linking manual test binary: dist/test_misc_setjmp_longjmp.bin
    Compiling bespoke binary: dist/test_misc_sfmr_call_stat.bin
    Compiling manual test object code: dist/test_sa_read_cpu_tsc.o
    Linking manual test binary: dist/test_sa_read_cpu_tsc.bin
    Compiling manual test object code: dist/test_sc_sandbox_process.o
    Linking manual test binary: dist/test_sc_sandbox_process.bin
    Compiling manual test object code: dist/test_sdo_read_dir_contents.o
    Linking manual test binary: dist/test_sdo_read_dir_contents.bin
    Compiling manual test object code: dist/test_sfc_lock_and_write_fd.o
    Linking manual test binary: dist/test_sfc_lock_and_write_fd.bin
    Compiling manual test object code: dist/test_sfc_read_locked_fd.o
    Linking manual test binary: dist/test_sfc_read_locked_fd.bin
    Compiling manual test object code: dist/test_sfc_write_locked_fd.o
    Linking manual test binary: dist/test_sfc_write_locked_fd.bin
    Compiling manual test object code: dist/test_sfl_create_hard_link.o
    Linking manual test binary: dist/test_sfl_create_hard_link.bin
    Compiling manual test object code: dist/test_sfl_create_sym_link.o
    Linking manual test binary: dist/test_sfl_create_sym_link.bin
    Compiling manual test object code: dist/test_sfmr_file_metadata.o
    Linking manual test binary: dist/test_sfmr_file_metadata.bin
    Compiling manual test object code: dist/test_sfmr_get_block_size.o
    Linking manual test binary: dist/test_sfmr_get_block_size.bin
    Compiling manual test object code: dist/test_sfmr_get_container_device_id.o
    Linking manual test binary: dist/test_sfmr_get_container_device_id.bin
    Compiling manual test object code: dist/test_sfmr_get_file_device_id.o
    Linking manual test binary: dist/test_sfmr_get_file_device_id.bin
    Compiling manual test object code: dist/test_sfmr_get_file_perms.o
    Linking manual test binary: dist/test_sfmr_get_file_perms.bin
    Compiling manual test object code: dist/test_sfmr_get_file_times.o
    Linking manual test binary: dist/test_sfmr_get_file_times.bin
    Compiling manual test object code: dist/test_sfmr_is_block_device.o
    Linking manual test binary: dist/test_sfmr_is_block_device.bin
    Compiling manual test object code: dist/test_sfmr_is_character_device.o
    Linking manual test binary: dist/test_sfmr_is_character_device.bin
    Compiling manual test object code: dist/test_sfmr_is_named_pipe.o
    Linking manual test binary: dist/test_sfmr_is_named_pipe.bin
    Compiling manual test object code: dist/test_sfmr_is_regular_file.o
    Linking manual test binary: dist/test_sfmr_is_regular_file.bin
    Compiling manual test object code: dist/test_sfmr_is_symbolic_link.o
    Linking manual test binary: dist/test_sfmr_is_symbolic_link.bin
    Compiling manual test object code: dist/test_sfmw_set_atime_now.o
    Linking manual test binary: dist/test_sfmw_set_atime_now.bin
    Compiling manual test object code: dist/test_sfmw_set_ownership.o
    Linking manual test binary: dist/test_sfmw_set_ownership.bin
    Compiling manual test object code: dist/test_sfmw_set_times.o
    Linking manual test binary: dist/test_sfmw_set_times.bin
    Compiling manual test object code: dist/test_sm_handle_ext_read_queue_ptr.o
    Linking manual test binary: dist/test_sm_handle_ext_read_queue_ptr.bin
    Compiling manual test object code: dist/test_sm_mapped_memory.o
    Linking manual test binary: dist/test_sm_mapped_memory.bin
    Compiling manual test object code: dist/test_sm_raii_string_macro.o
    Linking manual test binary: dist/test_sm_raii_string_macro.bin
    Compiling manual test object code: dist/test_sm_raii_void_macro.o
    Linking manual test binary: dist/test_sm_raii_void_macro.bin
    Compiling manual test object code: dist/test_sn_multi_sniffer.o
    Linking manual test binary: dist/test_sn_multi_sniffer.bin
    Compiling manual test object code: dist/test_sn_simple_dgram_client.o
    Linking manual test binary: dist/test_sn_simple_dgram_client.bin
    Compiling manual test object code: dist/test_sn_simple_dgram_server.o
    Linking manual test binary: dist/test_sn_simple_dgram_server.bin
    Compiling manual test object code: dist/test_sn_simple_sniffer.o
    Linking manual test binary: dist/test_sn_simple_sniffer.bin
    Compiling manual test object code: dist/test_sn_simple_stream_client.o
    Linking manual test binary: dist/test_sn_simple_stream_client.bin
    Compiling manual test object code: dist/test_sn_simple_stream_server.o
    Linking manual test binary: dist/test_sn_simple_stream_server.bin
    Compiling manual test object code: dist/test_ss_block_unblock.o
    Linking manual test binary: dist/test_ss_block_unblock.bin
    Compiling manual test object code: dist/test_ssh_handle_ext_async_client.o
    Linking manual test binary: dist/test_ssh_handle_ext_async_client.bin
    Compiling manual test object code: dist/test_ssh_handle_ext_async_server.o
    Linking manual test binary: dist/test_ssh_handle_ext_async_server.bin
    Compiling manual test object code: dist/test_ssh_handle_ext_read_queue_int.o
    Linking manual test binary: dist/test_ssh_handle_ext_read_queue_int.bin
    Compiling manual test object code: dist/test_ssh_handle_ext_sending_process.o
    Linking manual test binary: dist/test_ssh_handle_ext_sending_process.bin
    Compiling manual test object code: dist/test_ssh_handle_ext_signal_code.o
    Linking manual test binary: dist/test_ssh_handle_ext_signal_code.bin
    Compiling manual test object code: dist/test_ssh_handle_interruptions.o
    Linking manual test binary: dist/test_ssh_handle_interruptions.bin
    Compiling manual test object code: dist/test_ssh_handle_signal_number.o
    Linking manual test binary: dist/test_ssh_handle_signal_number.bin
    Compiling bespoke binary: dist/redirect_bin_output.bin
    Compiling Check unit test code: test/check_sdo_create_dir.c
    Linking Check unit test binary: dist/check_sdo_create_dir.bin
    Compiling Check unit test code: test/check_sdo_delete_dir.c
    Linking Check unit test binary: dist/check_sdo_delete_dir.bin
    Compiling Check unit test code: test/check_sdo_destroy_dir.c
    Linking Check unit test binary: dist/check_sdo_destroy_dir.bin
    Compiling Check unit test code: test/check_sdo_read_dir_contents.c
    Linking Check unit test binary: dist/check_sdo_read_dir_contents.bin
    Compiling Check unit test code: test/check_sfc_is_close_on_exec.c
    Linking Check unit test binary: dist/check_sfc_is_close_on_exec.bin
    Compiling Check unit test code: test/check_sfl_create_hard_link.c
    Linking Check unit test binary: dist/check_sfl_create_hard_link.bin
    Compiling Check unit test code: test/check_sfl_create_sym_link.c
    Linking Check unit test binary: dist/check_sfl_create_sym_link.bin
    Compiling Check unit test code: test/check_sfmr_get_access_time.c
    Linking Check unit test binary: dist/check_sfmr_get_access_time.bin
    Compiling Check unit test code: test/check_sfmr_get_block_count.c
    Linking Check unit test binary: dist/check_sfmr_get_block_count.bin
    Compiling Check unit test code: test/check_sfmr_get_block_size.c
    Linking Check unit test binary: dist/check_sfmr_get_block_size.bin
    Compiling Check unit test code: test/check_sfmr_get_change_time.c
    Linking Check unit test binary: dist/check_sfmr_get_change_time.bin
    Compiling Check unit test code: test/check_sfmr_get_container_device_id.c
    Linking Check unit test binary: dist/check_sfmr_get_container_device_id.bin
    Compiling Check unit test code: test/check_sfmr_get_file_device_id.c
    Linking Check unit test binary: dist/check_sfmr_get_file_device_id.bin
    Compiling Check unit test code: test/check_sfmr_get_file_perms.c
    Linking Check unit test binary: dist/check_sfmr_get_file_perms.bin
    Compiling Check unit test code: test/check_sfmr_get_file_type.c
    Linking Check unit test binary: dist/check_sfmr_get_file_type.bin
    Compiling Check unit test code: test/check_sfmr_get_group.c
    Linking Check unit test binary: dist/check_sfmr_get_group.bin
    Compiling Check unit test code: test/check_sfmr_get_hard_link_num.c
    Linking Check unit test binary: dist/check_sfmr_get_hard_link_num.bin
    Compiling Check unit test code: test/check_sfmr_get_mod_time.c
    Linking Check unit test binary: dist/check_sfmr_get_mod_time.bin
    Compiling Check unit test code: test/check_sfmr_get_owner.c
    Linking Check unit test binary: dist/check_sfmr_get_owner.bin
    Compiling Check unit test code: test/check_sfmr_get_serial_num.c
    Linking Check unit test binary: dist/check_sfmr_get_serial_num.bin
    Compiling Check unit test code: test/check_sfmr_get_size.c
    Linking Check unit test binary: dist/check_sfmr_get_size.bin
    Compiling Check unit test code: test/check_sfmr_is_block_device.c
    Linking Check unit test binary: dist/check_sfmr_is_block_device.bin
    Compiling Check unit test code: test/check_sfmr_is_character_device.c
    Linking Check unit test binary: dist/check_sfmr_is_character_device.bin
    Compiling Check unit test code: test/check_sfmr_is_directory.c
    Linking Check unit test binary: dist/check_sfmr_is_directory.bin
    Compiling Check unit test code: test/check_sfmr_is_named_pipe.c
    Linking Check unit test binary: dist/check_sfmr_is_named_pipe.bin
    Compiling Check unit test code: test/check_sfmr_is_regular_file.c
    Linking Check unit test binary: dist/check_sfmr_is_regular_file.bin
    Compiling Check unit test code: test/check_sfmr_is_socket.c
    Linking Check unit test binary: dist/check_sfmr_is_socket.bin
    Compiling Check unit test code: test/check_sfmr_is_sym_link.c
    Linking Check unit test binary: dist/check_sfmr_is_sym_link.bin
    Compiling Check unit test code: test/check_sfmw_add_mode.c
    Linking Check unit test binary: dist/check_sfmw_add_mode.bin
    Compiling Check unit test code: test/check_sfmw_remove_mode.c
    Linking Check unit test binary: dist/check_sfmw_remove_mode.bin
    Compiling Check unit test code: test/check_sfmw_set_atime.c
    Linking Check unit test binary: dist/check_sfmw_set_atime.bin
    Compiling Check unit test code: test/check_sfmw_set_atime_now.c
    Linking Check unit test binary: dist/check_sfmw_set_atime_now.bin
    Compiling Check unit test code: test/check_sfmw_set_mode.c
    Linking Check unit test binary: dist/check_sfmw_set_mode.bin
    Compiling Check unit test code: test/check_sfmw_set_mtime.c
    Linking Check unit test binary: dist/check_sfmw_set_mtime.bin
    Compiling Check unit test code: test/check_sfmw_set_mtime_now.c
    Linking Check unit test binary: dist/check_sfmw_set_mtime_now.bin
    Compiling Check unit test code: test/check_sfmw_set_ownership.c
    Linking Check unit test binary: dist/check_sfmw_set_ownership.bin
    Compiling Check unit test code: test/check_sfmw_set_times.c
    Linking Check unit test binary: dist/check_sfmw_set_times.bin
    Compiling Check unit test code: test/check_sfmw_set_times_now.c
    Linking Check unit test binary: dist/check_sfmw_set_times_now.bin
    Compiling Check unit test code: test/check_sv_validate_pathname.c
    Linking Check unit test binary: dist/check_sv_validate_pathname.bin

RUNNING TEST CASES
./dist/check_sdo_create_dir.bin
Running suite(s): SDO_Create_Dir
100%: Checks: 20, Failures: 0, Errors: 0
./dist/check_sdo_delete_dir.bin
Running suite(s): SDO_Delete_Dir
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sdo_destroy_dir.bin
Running suite(s): SDO_Destroy_Dir
100%: Checks: 16, Failures: 0, Errors: 0
./dist/check_sdo_read_dir_contents.bin
Running suite(s): SDO_Read_Dir_Contents
100%: Checks: 27, Failures: 0, Errors: 0
./dist/check_sfc_is_close_on_exec.bin
Running suite(s): SFC_Is_Close_On_Exec
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfl_create_hard_link.bin
Running suite(s): SFL_Create_Hard_Link
100%: Checks: 14, Failures: 0, Errors: 0
./dist/check_sfl_create_sym_link.bin
Running suite(s): SFL_Create_Sym_Link
100%: Checks: 14, Failures: 0, Errors: 0
./dist/check_sfmr_get_access_time.bin
Running suite(s): SFMR_Get_Access_Time
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_block_count.bin
Running suite(s): SFMR_Get_Block_Count
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_block_size.bin
Running suite(s): SFMR_Get_Block_Size
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_change_time.bin
Running suite(s): SFMR_Get_Change_Time
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_container_device_id.bin
Running suite(s): SFMR_Get_Container_Device_ID
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_file_device_id.bin
Running suite(s): SFMR_Get_File_Device_ID
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_file_perms.bin
Running suite(s): SFMR_Get_File_Perms
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_file_type.bin
Running suite(s): SFMR_Get_File_Type
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_group.bin
Running suite(s): SFMR_Get_Group
100%: Checks: 12, Failures: 0, Errors: 0
./dist/check_sfmr_get_hard_link_num.bin
Running suite(s): SFMR_Get_Hard_Link_Num
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_mod_time.bin
Running suite(s): SFMR_Get_Mod_Time
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_owner.bin
Running suite(s): SFMR_Get_Owner
100%: Checks: 12, Failures: 0, Errors: 0
./dist/check_sfmr_get_serial_num.bin
Running suite(s): SFMR_Get_Serial_Num
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_size.bin
Running suite(s): SFMR_Get_Size
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_block_device.bin
Running suite(s): SFMR_Is_Block_Device
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_character_device.bin
Running suite(s): SFMR_Is_Character_Device
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_directory.bin
Running suite(s): SFMR_Is_Directory
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_named_pipe.bin
Running suite(s): SFMR_Is_Named_Pipe
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_regular_file.bin
Running suite(s): SFMR_Is_Regular_File
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_socket.bin
Running suite(s): SFMR_Is_Socket
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_sym_link.bin
Running suite(s): SFMR_Is_Sym_Link
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmw_add_mode.bin
Running suite(s): SFMW_Add_Mode
100%: Checks: 16, Failures: 0, Errors: 0
./dist/check_sfmw_remove_mode.bin
Running suite(s): SFMW_Remove_Mode
100%: Checks: 16, Failures: 0, Errors: 0
./dist/check_sfmw_set_atime.bin
Running suite(s): SFMW_Set_Atime
100%: Checks: 24, Failures: 0, Errors: 0
./dist/check_sfmw_set_atime_now.bin
Running suite(s): SFMW_Set_Atime_Now
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmw_set_mode.bin
Running suite(s): SFMW_Set_Mode
100%: Checks: 16, Failures: 0, Errors: 0
./dist/check_sfmw_set_mtime.bin
Running suite(s): SFMW_Set_Mtime
100%: Checks: 24, Failures: 0, Errors: 0
./dist/check_sfmw_set_mtime_now.bin
Running suite(s): SFMW_Set_Mtime_Now
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmw_set_ownership.bin
Running suite(s): SFMW_Set_Ownership
100%: Checks: 20, Failures: 0, Errors: 0
./dist/check_sfmw_set_times.bin
Running suite(s): SFMW_Set_Times
100%: Checks: 24, Failures: 0, Errors: 0
./dist/check_sfmw_set_times_now.bin
Running suite(s): SFMW_Set_Times_Now
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sv_validate_pathname.bin
Running suite(s): SV_Validate_Pathname
100%: Checks: 11, Failures: 0, Errors: 0

RELEASING
Releasing libsketchyidea.so.1.0.0

==64800== Memcheck, a memory error detector
==64800== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==64800== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==64800== Command: code/dist/check_sdo_create_dir.bin
==64800== 
Running suite(s): SDO_Create_Dir
100%: Checks: 20, Failures: 0, Errors: 0
==64800== 
==64800== HEAP SUMMARY:
==64800==     in use at exit: 0 bytes in 0 blocks
==64800==   total heap usage: 1,142 allocs, 1,142 frees, 535,512 bytes allocated
==64800== 
==64800== All heap blocks were freed -- no leaks are possible
==64800== 
==64800== For lists of detected and suppressed errors, rerun with: -s
==64800== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==64887== Memcheck, a memory error detector
==64887== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==64887== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==64887== Command: code/dist/check_sdo_delete_dir.bin
==64887== 
Running suite(s): SDO_Delete_Dir
100%: Checks: 11, Failures: 0, Errors: 0
==64887== 
==64887== HEAP SUMMARY:
==64887==     in use at exit: 0 bytes in 0 blocks
==64887==   total heap usage: 379 allocs, 379 frees, 174,636 bytes allocated
==64887== 
==64887== All heap blocks were freed -- no leaks are possible
==64887== 
==64887== For lists of detected and suppressed errors, rerun with: -s
==64887== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==64893== Memcheck, a memory error detector
==64893== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==64893== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==64893== Command: code/dist/check_sdo_destroy_dir.bin
==64893== 
Running suite(s): SDO_Destroy_Dir
100%: Checks: 16, Failures: 0, Errors: 0
==64893== 
==64893== HEAP SUMMARY:
==64893==     in use at exit: 0 bytes in 0 blocks
==64893==   total heap usage: 1,100 allocs, 1,100 frees, 1,556,088 bytes allocated
==64893== 
==64893== All heap blocks were freed -- no leaks are possible
==64893== 
==64893== For lists of detected and suppressed errors, rerun with: -s
==64893== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==64924== Memcheck, a memory error detector
==64924== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==64924== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==64924== Command: code/dist/check_sdo_read_dir_contents.bin
==64924== 
Running suite(s): SDO_Read_Dir_Contents
100%: Checks: 27, Failures: 0, Errors: 0
==64924== 
==64924== HEAP SUMMARY:
==64924==     in use at exit: 0 bytes in 0 blocks
==64924==   total heap usage: 4,188 allocs, 4,188 frees, 2,665,201 bytes allocated
==64924== 
==64924== All heap blocks were freed -- no leaks are possible
==64924== 
==64924== For lists of detected and suppressed errors, rerun with: -s
==64924== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65118== Memcheck, a memory error detector
==65118== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65118== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65118== Command: code/dist/check_sfc_is_close_on_exec.bin
==65118== 
Running suite(s): SFC_Is_Close_On_Exec
100%: Checks: 11, Failures: 0, Errors: 0
==65118== 
==65118== HEAP SUMMARY:
==65118==     in use at exit: 0 bytes in 0 blocks
==65118==   total heap usage: 1,293 allocs, 1,293 frees, 380,239 bytes allocated
==65118== 
==65118== All heap blocks were freed -- no leaks are possible
==65118== 
==65118== For lists of detected and suppressed errors, rerun with: -s
==65118== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65144== Memcheck, a memory error detector
==65144== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65144== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65144== Command: code/dist/check_sfl_create_hard_link.bin
==65144== 
Running suite(s): SFL_Create_Hard_Link
100%: Checks: 14, Failures: 0, Errors: 0
==65144== 
==65144== HEAP SUMMARY:
==65144==     in use at exit: 0 bytes in 0 blocks
==65144==   total heap usage: 1,537 allocs, 1,537 frees, 477,742 bytes allocated
==65144== 
==65144== All heap blocks were freed -- no leaks are possible
==65144== 
==65144== For lists of detected and suppressed errors, rerun with: -s
==65144== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65175== Memcheck, a memory error detector
==65175== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65175== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65175== Command: code/dist/check_sfl_create_sym_link.bin
==65175== 
Running suite(s): SFL_Create_Sym_Link
100%: Checks: 14, Failures: 0, Errors: 0
==65175== 
==65175== HEAP SUMMARY:
==65175==     in use at exit: 0 bytes in 0 blocks
==65175==   total heap usage: 1,513 allocs, 1,513 frees, 476,691 bytes allocated
==65175== 
==65175== All heap blocks were freed -- no leaks are possible
==65175== 
==65175== For lists of detected and suppressed errors, rerun with: -s
==65175== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65206== Memcheck, a memory error detector
==65206== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65206== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65206== Command: code/dist/check_sfmr_get_access_time.bin
==65206== 
Running suite(s): SFMR_Get_Access_Time
100%: Checks: 11, Failures: 0, Errors: 0
==65206== 
==65206== HEAP SUMMARY:
==65206==     in use at exit: 0 bytes in 0 blocks
==65206==   total heap usage: 1,256 allocs, 1,256 frees, 410,552 bytes allocated
==65206== 
==65206== All heap blocks were freed -- no leaks are possible
==65206== 
==65206== For lists of detected and suppressed errors, rerun with: -s
==65206== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65245== Memcheck, a memory error detector
==65245== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65245== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65245== Command: code/dist/check_sfmr_get_block_count.bin
==65245== 
Running suite(s): SFMR_Get_Block_Count
100%: Checks: 11, Failures: 0, Errors: 0
==65245== 
==65245== HEAP SUMMARY:
==65245==     in use at exit: 0 bytes in 0 blocks
==65245==   total heap usage: 403 allocs, 403 frees, 195,701 bytes allocated
==65245== 
==65245== All heap blocks were freed -- no leaks are possible
==65245== 
==65245== For lists of detected and suppressed errors, rerun with: -s
==65245== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65262== Memcheck, a memory error detector
==65262== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65262== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65262== Command: code/dist/check_sfmr_get_block_size.bin
==65262== 
Running suite(s): SFMR_Get_Block_Size
100%: Checks: 11, Failures: 0, Errors: 0
==65262== 
==65262== HEAP SUMMARY:
==65262==     in use at exit: 0 bytes in 0 blocks
==65262==   total heap usage: 395 allocs, 395 frees, 194,992 bytes allocated
==65262== 
==65262== All heap blocks were freed -- no leaks are possible
==65262== 
==65262== For lists of detected and suppressed errors, rerun with: -s
==65262== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65278== Memcheck, a memory error detector
==65278== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65278== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65278== Command: code/dist/check_sfmr_get_change_time.bin
==65278== 
Running suite(s): SFMR_Get_Change_Time
100%: Checks: 11, Failures: 0, Errors: 0
==65278== 
==65278== HEAP SUMMARY:
==65278==     in use at exit: 0 bytes in 0 blocks
==65278==   total heap usage: 375 allocs, 375 frees, 194,672 bytes allocated
==65278== 
==65278== All heap blocks were freed -- no leaks are possible
==65278== 
==65278== For lists of detected and suppressed errors, rerun with: -s
==65278== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65295== Memcheck, a memory error detector
==65295== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65295== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65295== Command: code/dist/check_sfmr_get_container_device_id.bin
==65295== 
Running suite(s): SFMR_Get_Container_Device_ID
100%: Checks: 11, Failures: 0, Errors: 0
==65295== 
==65295== HEAP SUMMARY:
==65295==     in use at exit: 0 bytes in 0 blocks
==65295==   total heap usage: 318 allocs, 318 frees, 162,147 bytes allocated
==65295== 
==65295== All heap blocks were freed -- no leaks are possible
==65295== 
==65295== For lists of detected and suppressed errors, rerun with: -s
==65295== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65298== Memcheck, a memory error detector
==65298== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65298== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65298== Command: code/dist/check_sfmr_get_file_device_id.bin
==65298== 
Running suite(s): SFMR_Get_File_Device_ID
100%: Checks: 11, Failures: 0, Errors: 0
==65298== 
==65298== HEAP SUMMARY:
==65298==     in use at exit: 0 bytes in 0 blocks
==65298==   total heap usage: 403 allocs, 403 frees, 196,340 bytes allocated
==65298== 
==65298== All heap blocks were freed -- no leaks are possible
==65298== 
==65298== For lists of detected and suppressed errors, rerun with: -s
==65298== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65314== Memcheck, a memory error detector
==65314== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65314== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65314== Command: code/dist/check_sfmr_get_file_perms.bin
==65314== 
Running suite(s): SFMR_Get_File_Perms
100%: Checks: 11, Failures: 0, Errors: 0
==65314== 
==65314== HEAP SUMMARY:
==65314==     in use at exit: 0 bytes in 0 blocks
==65314==   total heap usage: 403 allocs, 403 frees, 195,488 bytes allocated
==65314== 
==65314== All heap blocks were freed -- no leaks are possible
==65314== 
==65314== For lists of detected and suppressed errors, rerun with: -s
==65314== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65331== Memcheck, a memory error detector
==65331== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65331== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65331== Command: code/dist/check_sfmr_get_file_type.bin
==65331== 
Running suite(s): SFMR_Get_File_Type
100%: Checks: 11, Failures: 0, Errors: 0
==65331== 
==65331== HEAP SUMMARY:
==65331==     in use at exit: 0 bytes in 0 blocks
==65331==   total heap usage: 301 allocs, 301 frees, 154,685 bytes allocated
==65331== 
==65331== All heap blocks were freed -- no leaks are possible
==65331== 
==65331== For lists of detected and suppressed errors, rerun with: -s
==65331== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65334== Memcheck, a memory error detector
==65334== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65334== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65334== Command: code/dist/check_sfmr_get_group.bin
==65334== 
Running suite(s): SFMR_Get_Group
100%: Checks: 12, Failures: 0, Errors: 0
==65334== 
==65334== HEAP SUMMARY:
==65334==     in use at exit: 0 bytes in 0 blocks
==65334==   total heap usage: 442 allocs, 442 frees, 213,025 bytes allocated
==65334== 
==65334== All heap blocks were freed -- no leaks are possible
==65334== 
==65334== For lists of detected and suppressed errors, rerun with: -s
==65334== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65352== Memcheck, a memory error detector
==65352== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65352== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65352== Command: code/dist/check_sfmr_get_hard_link_num.bin
==65352== 
Running suite(s): SFMR_Get_Hard_Link_Num
100%: Checks: 11, Failures: 0, Errors: 0
==65352== 
==65352== HEAP SUMMARY:
==65352==     in use at exit: 0 bytes in 0 blocks
==65352==   total heap usage: 403 allocs, 403 frees, 196,127 bytes allocated
==65352== 
==65352== All heap blocks were freed -- no leaks are possible
==65352== 
==65352== For lists of detected and suppressed errors, rerun with: -s
==65352== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65369== Memcheck, a memory error detector
==65369== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65369== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65369== Command: code/dist/check_sfmr_get_mod_time.bin
==65369== 
Running suite(s): SFMR_Get_Mod_Time
100%: Checks: 11, Failures: 0, Errors: 0
==65369== 
==65369== HEAP SUMMARY:
==65369==     in use at exit: 0 bytes in 0 blocks
==65369==   total heap usage: 375 allocs, 375 frees, 194,117 bytes allocated
==65369== 
==65369== All heap blocks were freed -- no leaks are possible
==65369== 
==65369== For lists of detected and suppressed errors, rerun with: -s
==65369== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65386== Memcheck, a memory error detector
==65386== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65386== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65386== Command: code/dist/check_sfmr_get_owner.bin
==65386== 
Running suite(s): SFMR_Get_Owner
100%: Checks: 12, Failures: 0, Errors: 0
==65386== 
==65386== HEAP SUMMARY:
==65386==     in use at exit: 0 bytes in 0 blocks
==65386==   total heap usage: 442 allocs, 442 frees, 213,025 bytes allocated
==65386== 
==65386== All heap blocks were freed -- no leaks are possible
==65386== 
==65386== For lists of detected and suppressed errors, rerun with: -s
==65386== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65405== Memcheck, a memory error detector
==65405== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65405== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65405== Command: code/dist/check_sfmr_get_serial_num.bin
==65405== 
Running suite(s): SFMR_Get_Serial_Num
100%: Checks: 11, Failures: 0, Errors: 0
==65405== 
==65405== HEAP SUMMARY:
==65405==     in use at exit: 0 bytes in 0 blocks
==65405==   total heap usage: 1,284 allocs, 1,284 frees, 411,396 bytes allocated
==65405== 
==65405== All heap blocks were freed -- no leaks are possible
==65405== 
==65405== For lists of detected and suppressed errors, rerun with: -s
==65405== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65445== Memcheck, a memory error detector
==65445== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65445== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65445== Command: code/dist/check_sfmr_get_size.bin
==65445== 
Running suite(s): SFMR_Get_Size
100%: Checks: 11, Failures: 0, Errors: 0
==65445== 
==65445== HEAP SUMMARY:
==65445==     in use at exit: 0 bytes in 0 blocks
==65445==   total heap usage: 403 allocs, 403 frees, 194,210 bytes allocated
==65445== 
==65445== All heap blocks were freed -- no leaks are possible
==65445== 
==65445== For lists of detected and suppressed errors, rerun with: -s
==65445== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65461== Memcheck, a memory error detector
==65461== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65461== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65461== Command: code/dist/check_sfmr_is_block_device.bin
==65461== 
Running suite(s): SFMR_Is_Block_Device
100%: Checks: 11, Failures: 0, Errors: 0
==65461== 
==65461== HEAP SUMMARY:
==65461==     in use at exit: 0 bytes in 0 blocks
==65461==   total heap usage: 301 allocs, 301 frees, 154,997 bytes allocated
==65461== 
==65461== All heap blocks were freed -- no leaks are possible
==65461== 
==65461== For lists of detected and suppressed errors, rerun with: -s
==65461== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65464== Memcheck, a memory error detector
==65464== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65464== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65464== Command: code/dist/check_sfmr_is_character_device.bin
==65464== 
Running suite(s): SFMR_Is_Character_Device
100%: Checks: 11, Failures: 0, Errors: 0
==65464== 
==65464== HEAP SUMMARY:
==65464==     in use at exit: 0 bytes in 0 blocks
==65464==   total heap usage: 301 allocs, 301 frees, 155,621 bytes allocated
==65464== 
==65464== All heap blocks were freed -- no leaks are possible
==65464== 
==65464== For lists of detected and suppressed errors, rerun with: -s
==65464== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65466== Memcheck, a memory error detector
==65466== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65466== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65466== Command: code/dist/check_sfmr_is_directory.bin
==65466== 
Running suite(s): SFMR_Is_Directory
100%: Checks: 11, Failures: 0, Errors: 0
==65466== 
==65466== HEAP SUMMARY:
==65466==     in use at exit: 0 bytes in 0 blocks
==65466==   total heap usage: 301 allocs, 301 frees, 154,529 bytes allocated
==65466== 
==65466== All heap blocks were freed -- no leaks are possible
==65466== 
==65466== For lists of detected and suppressed errors, rerun with: -s
==65466== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65468== Memcheck, a memory error detector
==65468== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65468== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65468== Command: code/dist/check_sfmr_is_named_pipe.bin
==65468== 
Running suite(s): SFMR_Is_Named_Pipe
100%: Checks: 11, Failures: 0, Errors: 0
==65468== 
==65468== HEAP SUMMARY:
==65468==     in use at exit: 0 bytes in 0 blocks
==65468==   total heap usage: 301 allocs, 301 frees, 154,685 bytes allocated
==65468== 
==65468== All heap blocks were freed -- no leaks are possible
==65468== 
==65468== For lists of detected and suppressed errors, rerun with: -s
==65468== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65470== Memcheck, a memory error detector
==65470== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65470== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65470== Command: code/dist/check_sfmr_is_regular_file.bin
==65470== 
Running suite(s): SFMR_Is_Regular_File
100%: Checks: 11, Failures: 0, Errors: 0
==65470== 
==65470== HEAP SUMMARY:
==65470==     in use at exit: 0 bytes in 0 blocks
==65470==   total heap usage: 301 allocs, 301 frees, 154,997 bytes allocated
==65470== 
==65470== All heap blocks were freed -- no leaks are possible
==65470== 
==65470== For lists of detected and suppressed errors, rerun with: -s
==65470== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65472== Memcheck, a memory error detector
==65472== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65472== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65472== Command: code/dist/check_sfmr_is_socket.bin
==65472== 
Running suite(s): SFMR_Is_Socket
100%: Checks: 11, Failures: 0, Errors: 0
==65472== 
==65472== HEAP SUMMARY:
==65472==     in use at exit: 0 bytes in 0 blocks
==65472==   total heap usage: 301 allocs, 301 frees, 154,061 bytes allocated
==65472== 
==65472== All heap blocks were freed -- no leaks are possible
==65472== 
==65472== For lists of detected and suppressed errors, rerun with: -s
==65472== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65474== Memcheck, a memory error detector
==65474== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65474== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65474== Command: code/dist/check_sfmr_is_sym_link.bin
==65474== 
Running suite(s): SFMR_Is_Sym_Link
100%: Checks: 11, Failures: 0, Errors: 0
==65474== 
==65474== HEAP SUMMARY:
==65474==     in use at exit: 0 bytes in 0 blocks
==65474==   total heap usage: 301 allocs, 301 frees, 154,373 bytes allocated
==65474== 
==65474== All heap blocks were freed -- no leaks are possible
==65474== 
==65474== For lists of detected and suppressed errors, rerun with: -s
==65474== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65476== Memcheck, a memory error detector
==65476== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65476== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65476== Command: code/dist/check_sfmw_add_mode.bin
==65476== 
Running suite(s): SFMW_Add_Mode
100%: Checks: 16, Failures: 0, Errors: 0
==65476== 
==65476== HEAP SUMMARY:
==65476==     in use at exit: 0 bytes in 0 blocks
==65476==   total heap usage: 5,321 allocs, 5,321 frees, 1,417,570 bytes allocated
==65476== 
==65476== All heap blocks were freed -- no leaks are possible
==65476== 
==65476== For lists of detected and suppressed errors, rerun with: -s
==65476== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==65860== Memcheck, a memory error detector
==65860== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==65860== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==65860== Command: code/dist/check_sfmw_remove_mode.bin
==65860== 
Running suite(s): SFMW_Remove_Mode
100%: Checks: 16, Failures: 0, Errors: 0
==65860== 
==65860== HEAP SUMMARY:
==65860==     in use at exit: 0 bytes in 0 blocks
==65860==   total heap usage: 5,321 allocs, 5,321 frees, 1,429,537 bytes allocated
==65860== 
==65860== All heap blocks were freed -- no leaks are possible
==65860== 
==65860== For lists of detected and suppressed errors, rerun with: -s
==65860== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==66243== Memcheck, a memory error detector
==66243== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==66243== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==66243== Command: code/dist/check_sfmw_set_atime.bin
==66243== 
Running suite(s): SFMW_Set_Atime
100%: Checks: 24, Failures: 0, Errors: 0
==66243== 
==66243== HEAP SUMMARY:
==66243==     in use at exit: 0 bytes in 0 blocks
==66243==   total heap usage: 2,628 allocs, 2,628 frees, 706,269 bytes allocated
==66243== 
==66243== All heap blocks were freed -- no leaks are possible
==66243== 
==66243== For lists of detected and suppressed errors, rerun with: -s
==66243== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==66249== Memcheck, a memory error detector
==66249== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==66249== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==66249== Command: code/dist/check_sfmw_set_atime_now.bin
==66249== 
Running suite(s): SFMW_Set_Atime_Now
100%: Checks: 11, Failures: 0, Errors: 0
==66249== 
==66249== HEAP SUMMARY:
==66249==     in use at exit: 0 bytes in 0 blocks
==66249==   total heap usage: 738 allocs, 738 frees, 315,349 bytes allocated
==66249== 
==66249== All heap blocks were freed -- no leaks are possible
==66249== 
==66249== For lists of detected and suppressed errors, rerun with: -s
==66249== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==66252== Memcheck, a memory error detector
==66252== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==66252== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==66252== Command: code/dist/check_sfmw_set_mode.bin
==66252== 
Running suite(s): SFMW_Set_Mode
100%: Checks: 16, Failures: 0, Errors: 0
==66252== 
==66252== HEAP SUMMARY:
==66252==     in use at exit: 0 bytes in 0 blocks
==66252==   total heap usage: 5,225 allocs, 5,225 frees, 1,359,890 bytes allocated
==66252== 
==66252== All heap blocks were freed -- no leaks are possible
==66252== 
==66252== For lists of detected and suppressed errors, rerun with: -s
==66252== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==66612== Memcheck, a memory error detector
==66612== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==66612== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==66612== Command: code/dist/check_sfmw_set_mtime.bin
==66612== 
Running suite(s): SFMW_Set_Mtime
100%: Checks: 24, Failures: 0, Errors: 0
==66612== 
==66612== HEAP SUMMARY:
==66612==     in use at exit: 0 bytes in 0 blocks
==66612==   total heap usage: 2,628 allocs, 2,628 frees, 706,269 bytes allocated
==66612== 
==66612== All heap blocks were freed -- no leaks are possible
==66612== 
==66612== For lists of detected and suppressed errors, rerun with: -s
==66612== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==66619== Memcheck, a memory error detector
==66619== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==66619== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==66619== Command: code/dist/check_sfmw_set_mtime_now.bin
==66619== 
Running suite(s): SFMW_Set_Mtime_Now
100%: Checks: 11, Failures: 0, Errors: 0
==66619== 
==66619== HEAP SUMMARY:
==66619==     in use at exit: 0 bytes in 0 blocks
==66619==   total heap usage: 738 allocs, 738 frees, 315,349 bytes allocated
==66619== 
==66619== All heap blocks were freed -- no leaks are possible
==66619== 
==66619== For lists of detected and suppressed errors, rerun with: -s
==66619== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==66622== Memcheck, a memory error detector
==66622== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==66622== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==66622== Command: code/dist/check_sfmw_set_ownership.bin
==66622== 
Running suite(s): SFMW_Set_Ownership
100%: Checks: 20, Failures: 0, Errors: 0
==66622== 
==66622== HEAP SUMMARY:
==66622==     in use at exit: 0 bytes in 0 blocks
==66622==   total heap usage: 7,287 allocs, 7,287 frees, 1,517,442 bytes allocated
==66622== 
==66622== All heap blocks were freed -- no leaks are possible
==66622== 
==66622== For lists of detected and suppressed errors, rerun with: -s
==66622== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==66907== Memcheck, a memory error detector
==66907== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==66907== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==66907== Command: code/dist/check_sfmw_set_times.bin
==66907== 
Running suite(s): SFMW_Set_Times
100%: Checks: 24, Failures: 0, Errors: 0
==66907== 
==66907== HEAP SUMMARY:
==66907==     in use at exit: 0 bytes in 0 blocks
==66907==   total heap usage: 2,748 allocs, 2,748 frees, 709,959 bytes allocated
==66907== 
==66907== All heap blocks were freed -- no leaks are possible
==66907== 
==66907== For lists of detected and suppressed errors, rerun with: -s
==66907== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==66914== Memcheck, a memory error detector
==66914== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==66914== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==66914== Command: code/dist/check_sfmw_set_times_now.bin
==66914== 
Running suite(s): SFMW_Set_Times_Now
100%: Checks: 11, Failures: 0, Errors: 0
==66914== 
==66914== HEAP SUMMARY:
==66914==     in use at exit: 0 bytes in 0 blocks
==66914==   total heap usage: 802 allocs, 802 frees, 317,573 bytes allocated
==66914== 
==66914== All heap blocks were freed -- no leaks are possible
==66914== 
==66914== For lists of detected and suppressed errors, rerun with: -s
==66914== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==66917== Memcheck, a memory error detector
==66917== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==66917== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==66917== Command: code/dist/check_sv_validate_pathname.bin
==66917== 
Running suite(s): SV_Validate_Pathname
100%: Checks: 11, Failures: 0, Errors: 0
==66917== 
==66917== HEAP SUMMARY:
==66917==     in use at exit: 0 bytes in 0 blocks
==66917==   total heap usage: 1,160 allocs, 1,160 frees, 375,356 bytes allocated
==66917== 
==66917== All heap blocks were freed -- no leaks are possible
==66917== 
==66917== For lists of detected and suppressed errors, rerun with: -s
==66917== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

TOTAL CHECK UNIT TESTS: 530



************************************
*** FORK && EXEC && WAIT && EXIT ***
************************************
*** The redirect_bin_output.bin binary forks a child process... ***
*** ...that uses execvp() to execute command line arguments (after dup2()ing some fds)... ***
*** ...while the parent process waitpid()s on the child process to finish... ***
*** ...and the parent process calls exit(). ***
The full command is 'ls -l *.txt  # No text files'
Command output:
ls: cannot access '*.txt': No such file or directory


The full command is './code/dist/redirect_bin_output.bin ls -l /home/vagrant/Repos/sketchy-idea  # No output'
Command output:
[INFO] The child exited with 0


The full command is 'ls -l *.txt  # Redirected output from the above ls command'
Command output:
-rw-rw-r-- 1 vagrant vagrant   0 Jul 15 13:44 20250615-134422-ls-errors.txt
-rw-rw-r-- 1 vagrant vagrant 444 Jul 15 13:44 20250615-134422-ls-output.txt


The full command is 'cat *ls-output.txt  # Redirected stdout from the ls command'
Command output:
total 52
-rw-rw-r-- 1 vagrant vagrant     0 Jul 15 13:44 20250615-134422-ls-errors.txt
-rw-rw-r-- 1 vagrant vagrant     0 Jul 15 13:44 20250615-134422-ls-output.txt
-rw-rw-r-- 1 vagrant vagrant 35149 Feb 12 15:22 LICENSE
-rw-rw-r-- 1 vagrant vagrant  1222 Jul 11 16:16 Makefile
-rw-rw-r-- 1 vagrant vagrant  1770 Feb 12 15:22 README.md
drwxrwxr-x 6 vagrant vagrant  4096 Jul 15 13:43 code
drwxrwxr-x 4 vagrant vagrant  4096 Feb 14 16:06 devops


The full command is 'cat *ls-errors.txt  # Redirected stderr from the ls command'
Command output:


NOTE: redirect_bin_output.bin was originally written to demonstrate dup() usage...

*************
*** CLONE ***
*************
*** The test_sc_sandbox_process.bin binary (optionally) utilizes clone()... ***
*** ...to sandbox a child process with a new PID namespace and... ***
*** ...a new UTS namespace. ***
The full command is 'hostname  # Current hostname'
Command output:
LDP-CDE-v0


The default behavior of the test_sc_sandbox_process.bin binary...
The full command is 'sudo ./code/dist/test_sc_sandbox_process.bin  # PIDs ID'd and hostname changed'
Command output:
[INFO] I am the MAIN() and I think my PID is 69541
[INFO] I am the MAIN() and I have changed my hostname to LDP-CDE-v0
[INFO] I am the CHILD and I think my PID is 69542
[INFO] I am the CHILD and I think my parent's PID is 69541
[INFO] I am the CHILD and I have changed my hostname to sandbox
[INFO] I am the CHILD and my hostname is sandbox
[INFO] I am the MAIN() and I think my PID is 69541
[INFO] I am the MAIN() and I have changed my hostname to LDP-CDE-v0
[INFO] I am the PARENT and I have cloned a child process with PID 69542
[INFO] PARENT - The child has finished
[INFO] I am the PARENT and my hostname is sandbox


The full command is 'hostname  # The hostname was modified'
Command output:
sandbox


The --sandbox argument will clone() some namespaces...
The full command is 'sudo ./code/dist/test_sc_sandbox_process.bin --sandbox  # Running in new namespaces'
Command output:
[INFO] MAIN() - Using sandbox flags with clone3
[INFO] I am the MAIN() and I think my PID is 69546
[INFO] I am the MAIN() and I have changed my hostname to LDP-CDE-v0
[INFO] I am the CHILD and I think my PID is 1
[INFO] I am the CHILD and I think my parent's PID is 0
[INFO] I am the CHILD and I have changed my hostname to sandbox
[INFO] I am the CHILD and my hostname is sandbox
[INFO] MAIN() - Using sandbox flags with clone3
[INFO] I am the MAIN() and I think my PID is 69546
[INFO] I am the MAIN() and I have changed my hostname to LDP-CDE-v0
[INFO] I am the PARENT and I have cloned a child process with PID 69547
[INFO] PARENT - The child has finished
[INFO] I am the PARENT and my hostname is LDP-CDE-v0


The full command is 'hostname  # The hostname change did not escape the clone()d UTS namespace'
Command output:
LDP-CDE-v0


