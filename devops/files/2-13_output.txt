Mon May 19 18:17:01 UTC 2025

VALIDATING
    Validating gcc
        [✓] gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    Validating glibc
        [✓] ldd (Ubuntu GLIBC 2.35-0ubuntu3.9) 2.35
    Validating Check
        [✓] Check unit test version: (0) (15) (2)

CLEANING
    Cleaning dist/ directory

COMPILING
    Compiling: src/devops_code.c
    Compiling: src/skid_dir_operations.c
    Compiling: src/skid_file_control.c
    Compiling: src/skid_file_descriptors.c
    Compiling: src/skid_file_link.c
    Compiling: src/skid_file_metadata_read.c
    Compiling: src/skid_file_metadata_write.c
    Compiling: src/skid_file_operations.c
    Compiling: src/skid_memory.c
    Compiling: src/skid_network.c
    Compiling: src/skid_signal_handlers.c
    Compiling: src/skid_signals.c
    Compiling: src/skid_time.c
    Compiling: src/skid_validation.c
    Compiling: src/unit_test_code.c
    Compiling manual test object code: dist/test_devops_code_create_path_tree.o
    Linking manual test binary: dist/test_devops_code_create_path_tree.bin
    Compiling manual test object code: dist/test_devops_code_get_compatible_gid.o
    Linking manual test binary: dist/test_devops_code_get_compatible_gid.bin
    Compiling manual test object code: dist/test_feature_test_macros.o
    Linking manual test binary: dist/test_feature_test_macros.bin
    Compiling manual test object code: dist/test_sdo_read_dir_contents.o
    Linking manual test binary: dist/test_sdo_read_dir_contents.bin
    Compiling manual test object code: dist/test_sfc_lock_and_write_fd.o
    Linking manual test binary: dist/test_sfc_lock_and_write_fd.bin
    Compiling manual test object code: dist/test_sfc_read_locked_fd.o
    Linking manual test binary: dist/test_sfc_read_locked_fd.bin
    Compiling manual test object code: dist/test_sfc_write_locked_fd.o
    Linking manual test binary: dist/test_sfc_write_locked_fd.bin
    Compiling manual test object code: dist/test_sfl_create_hard_link.o
    Linking manual test binary: dist/test_sfl_create_hard_link.bin
    Compiling manual test object code: dist/test_sfl_create_sym_link.o
    Linking manual test binary: dist/test_sfl_create_sym_link.bin
    Compiling manual test object code: dist/test_sfmr_file_metadata.o
    Linking manual test binary: dist/test_sfmr_file_metadata.bin
    Compiling manual test object code: dist/test_sfmr_get_block_size.o
    Linking manual test binary: dist/test_sfmr_get_block_size.bin
    Compiling manual test object code: dist/test_sfmr_get_container_device_id.o
    Linking manual test binary: dist/test_sfmr_get_container_device_id.bin
    Compiling manual test object code: dist/test_sfmr_get_file_device_id.o
    Linking manual test binary: dist/test_sfmr_get_file_device_id.bin
    Compiling manual test object code: dist/test_sfmr_get_file_perms.o
    Linking manual test binary: dist/test_sfmr_get_file_perms.bin
    Compiling manual test object code: dist/test_sfmr_get_file_times.o
    Linking manual test binary: dist/test_sfmr_get_file_times.bin
    Compiling manual test object code: dist/test_sfmr_is_block_device.o
    Linking manual test binary: dist/test_sfmr_is_block_device.bin
    Compiling manual test object code: dist/test_sfmr_is_character_device.o
    Linking manual test binary: dist/test_sfmr_is_character_device.bin
    Compiling manual test object code: dist/test_sfmr_is_named_pipe.o
    Linking manual test binary: dist/test_sfmr_is_named_pipe.bin
    Compiling manual test object code: dist/test_sfmr_is_regular_file.o
    Linking manual test binary: dist/test_sfmr_is_regular_file.bin
    Compiling manual test object code: dist/test_sfmr_is_symbolic_link.o
    Linking manual test binary: dist/test_sfmr_is_symbolic_link.bin
    Compiling manual test object code: dist/test_sfmw_set_atime_now.o
    Linking manual test binary: dist/test_sfmw_set_atime_now.bin
    Compiling manual test object code: dist/test_sfmw_set_ownership.o
    Linking manual test binary: dist/test_sfmw_set_ownership.bin
    Compiling manual test object code: dist/test_sfmw_set_times.o
    Linking manual test binary: dist/test_sfmw_set_times.bin
    Compiling manual test object code: dist/test_sn_multi_sniffer.o
    Linking manual test binary: dist/test_sn_multi_sniffer.bin
    Compiling manual test object code: dist/test_sn_simple_dgram_client.o
    Linking manual test binary: dist/test_sn_simple_dgram_client.bin
    Compiling manual test object code: dist/test_sn_simple_dgram_server.o
    Linking manual test binary: dist/test_sn_simple_dgram_server.bin
    Compiling manual test object code: dist/test_sn_simple_sniffer.o
    Linking manual test binary: dist/test_sn_simple_sniffer.bin
    Compiling manual test object code: dist/test_sn_simple_stream_client.o
    Linking manual test binary: dist/test_sn_simple_stream_client.bin
    Compiling manual test object code: dist/test_sn_simple_stream_server.o
    Linking manual test binary: dist/test_sn_simple_stream_server.bin
    Compiling manual test object code: dist/test_ss_block_unblock.o
    Linking manual test binary: dist/test_ss_block_unblock.bin
    Compiling manual test object code: dist/test_ssh_handle_ext_async_client.o
    Linking manual test binary: dist/test_ssh_handle_ext_async_client.bin
    Compiling manual test object code: dist/test_ssh_handle_ext_async_server.o
    Linking manual test binary: dist/test_ssh_handle_ext_async_server.bin
    Compiling manual test object code: dist/test_ssh_handle_ext_read_queue_int.o
    Linking manual test binary: dist/test_ssh_handle_ext_read_queue_int.bin
    Compiling manual test object code: dist/test_ssh_handle_ext_sending_process.o
    Linking manual test binary: dist/test_ssh_handle_ext_sending_process.bin
    Compiling manual test object code: dist/test_ssh_handle_ext_signal_code.o
    Linking manual test binary: dist/test_ssh_handle_ext_signal_code.bin
    Compiling manual test object code: dist/test_ssh_handle_interruptions.o
    Linking manual test binary: dist/test_ssh_handle_interruptions.bin
    Compiling manual test object code: dist/test_ssh_handle_signal_number.o
    Linking manual test binary: dist/test_ssh_handle_signal_number.bin
    Compiling bespoke binary: dist/redirect_bin_output.bin
    Compiling Check unit test code: test/check_sdo_create_dir.c
    Linking Check unit test binary: dist/check_sdo_create_dir.bin
    Compiling Check unit test code: test/check_sdo_delete_dir.c
    Linking Check unit test binary: dist/check_sdo_delete_dir.bin
    Compiling Check unit test code: test/check_sdo_destroy_dir.c
    Linking Check unit test binary: dist/check_sdo_destroy_dir.bin
    Compiling Check unit test code: test/check_sdo_read_dir_contents.c
    Linking Check unit test binary: dist/check_sdo_read_dir_contents.bin
    Compiling Check unit test code: test/check_sfc_is_close_on_exec.c
    Linking Check unit test binary: dist/check_sfc_is_close_on_exec.bin
    Compiling Check unit test code: test/check_sfl_create_hard_link.c
    Linking Check unit test binary: dist/check_sfl_create_hard_link.bin
    Compiling Check unit test code: test/check_sfl_create_sym_link.c
    Linking Check unit test binary: dist/check_sfl_create_sym_link.bin
    Compiling Check unit test code: test/check_sfmr_get_access_time.c
    Linking Check unit test binary: dist/check_sfmr_get_access_time.bin
    Compiling Check unit test code: test/check_sfmr_get_block_count.c
    Linking Check unit test binary: dist/check_sfmr_get_block_count.bin
    Compiling Check unit test code: test/check_sfmr_get_block_size.c
    Linking Check unit test binary: dist/check_sfmr_get_block_size.bin
    Compiling Check unit test code: test/check_sfmr_get_change_time.c
    Linking Check unit test binary: dist/check_sfmr_get_change_time.bin
    Compiling Check unit test code: test/check_sfmr_get_container_device_id.c
    Linking Check unit test binary: dist/check_sfmr_get_container_device_id.bin
    Compiling Check unit test code: test/check_sfmr_get_file_device_id.c
    Linking Check unit test binary: dist/check_sfmr_get_file_device_id.bin
    Compiling Check unit test code: test/check_sfmr_get_file_perms.c
    Linking Check unit test binary: dist/check_sfmr_get_file_perms.bin
    Compiling Check unit test code: test/check_sfmr_get_file_type.c
    Linking Check unit test binary: dist/check_sfmr_get_file_type.bin
    Compiling Check unit test code: test/check_sfmr_get_group.c
    Linking Check unit test binary: dist/check_sfmr_get_group.bin
    Compiling Check unit test code: test/check_sfmr_get_hard_link_num.c
    Linking Check unit test binary: dist/check_sfmr_get_hard_link_num.bin
    Compiling Check unit test code: test/check_sfmr_get_mod_time.c
    Linking Check unit test binary: dist/check_sfmr_get_mod_time.bin
    Compiling Check unit test code: test/check_sfmr_get_owner.c
    Linking Check unit test binary: dist/check_sfmr_get_owner.bin
    Compiling Check unit test code: test/check_sfmr_get_serial_num.c
    Linking Check unit test binary: dist/check_sfmr_get_serial_num.bin
    Compiling Check unit test code: test/check_sfmr_get_size.c
    Linking Check unit test binary: dist/check_sfmr_get_size.bin
    Compiling Check unit test code: test/check_sfmr_is_block_device.c
    Linking Check unit test binary: dist/check_sfmr_is_block_device.bin
    Compiling Check unit test code: test/check_sfmr_is_character_device.c
    Linking Check unit test binary: dist/check_sfmr_is_character_device.bin
    Compiling Check unit test code: test/check_sfmr_is_directory.c
    Linking Check unit test binary: dist/check_sfmr_is_directory.bin
    Compiling Check unit test code: test/check_sfmr_is_named_pipe.c
    Linking Check unit test binary: dist/check_sfmr_is_named_pipe.bin
    Compiling Check unit test code: test/check_sfmr_is_regular_file.c
    Linking Check unit test binary: dist/check_sfmr_is_regular_file.bin
    Compiling Check unit test code: test/check_sfmr_is_socket.c
    Linking Check unit test binary: dist/check_sfmr_is_socket.bin
    Compiling Check unit test code: test/check_sfmr_is_sym_link.c
    Linking Check unit test binary: dist/check_sfmr_is_sym_link.bin
    Compiling Check unit test code: test/check_sfmw_add_mode.c
    Linking Check unit test binary: dist/check_sfmw_add_mode.bin
    Compiling Check unit test code: test/check_sfmw_remove_mode.c
    Linking Check unit test binary: dist/check_sfmw_remove_mode.bin
    Compiling Check unit test code: test/check_sfmw_set_atime.c
    Linking Check unit test binary: dist/check_sfmw_set_atime.bin
    Compiling Check unit test code: test/check_sfmw_set_atime_now.c
    Linking Check unit test binary: dist/check_sfmw_set_atime_now.bin
    Compiling Check unit test code: test/check_sfmw_set_mode.c
    Linking Check unit test binary: dist/check_sfmw_set_mode.bin
    Compiling Check unit test code: test/check_sfmw_set_mtime.c
    Linking Check unit test binary: dist/check_sfmw_set_mtime.bin
    Compiling Check unit test code: test/check_sfmw_set_mtime_now.c
    Linking Check unit test binary: dist/check_sfmw_set_mtime_now.bin
    Compiling Check unit test code: test/check_sfmw_set_ownership.c
    Linking Check unit test binary: dist/check_sfmw_set_ownership.bin
    Compiling Check unit test code: test/check_sfmw_set_times.c
    Linking Check unit test binary: dist/check_sfmw_set_times.bin
    Compiling Check unit test code: test/check_sfmw_set_times_now.c
    Linking Check unit test binary: dist/check_sfmw_set_times_now.bin

RUNNING TEST CASES
./dist/check_sdo_create_dir.bin
Running suite(s): SDO_Create_Dir
100%: Checks: 20, Failures: 0, Errors: 0
./dist/check_sdo_delete_dir.bin
Running suite(s): SDO_Delete_Dir
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sdo_destroy_dir.bin
Running suite(s): SDO_Destroy_Dir
100%: Checks: 16, Failures: 0, Errors: 0
./dist/check_sdo_read_dir_contents.bin
Running suite(s): SDO_Read_Dir_Contents
100%: Checks: 27, Failures: 0, Errors: 0
./dist/check_sfc_is_close_on_exec.bin
Running suite(s): SFC_Is_Close_On_Exec
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfl_create_hard_link.bin
Running suite(s): SFL_Create_Hard_Link
100%: Checks: 14, Failures: 0, Errors: 0
./dist/check_sfl_create_sym_link.bin
Running suite(s): SFL_Create_Sym_Link
100%: Checks: 14, Failures: 0, Errors: 0
./dist/check_sfmr_get_access_time.bin
Running suite(s): SFMR_Get_Access_Time
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_block_count.bin
Running suite(s): SFMR_Get_Block_Count
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_block_size.bin
Running suite(s): SFMR_Get_Block_Size
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_change_time.bin
Running suite(s): SFMR_Get_Change_Time
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_container_device_id.bin
Running suite(s): SFMR_Get_Container_Device_ID
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_file_device_id.bin
Running suite(s): SFMR_Get_File_Device_ID
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_file_perms.bin
Running suite(s): SFMR_Get_File_Perms
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_file_type.bin
Running suite(s): SFMR_Get_File_Type
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_group.bin
Running suite(s): SFMR_Get_Group
100%: Checks: 12, Failures: 0, Errors: 0
./dist/check_sfmr_get_hard_link_num.bin
Running suite(s): SFMR_Get_Hard_Link_Num
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_mod_time.bin
Running suite(s): SFMR_Get_Mod_Time
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_owner.bin
Running suite(s): SFMR_Get_Owner
100%: Checks: 12, Failures: 0, Errors: 0
./dist/check_sfmr_get_serial_num.bin
Running suite(s): SFMR_Get_Serial_Num
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_size.bin
Running suite(s): SFMR_Get_Size
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_block_device.bin
Running suite(s): SFMR_Is_Block_Device
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_character_device.bin
Running suite(s): SFMR_Is_Character_Device
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_directory.bin
Running suite(s): SFMR_Is_Directory
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_named_pipe.bin
Running suite(s): SFMR_Is_Named_Pipe
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_regular_file.bin
Running suite(s): SFMR_Is_Regular_File
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_socket.bin
Running suite(s): SFMR_Is_Socket
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_sym_link.bin
Running suite(s): SFMR_Is_Sym_Link
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmw_add_mode.bin
Running suite(s): SFMW_Add_Mode
100%: Checks: 16, Failures: 0, Errors: 0
./dist/check_sfmw_remove_mode.bin
Running suite(s): SFMW_Remove_Mode
100%: Checks: 16, Failures: 0, Errors: 0
./dist/check_sfmw_set_atime.bin
Running suite(s): SFMW_Set_Atime
100%: Checks: 24, Failures: 0, Errors: 0
./dist/check_sfmw_set_atime_now.bin
Running suite(s): SFMW_Set_Atime_Now
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmw_set_mode.bin
Running suite(s): SFMW_Set_Mode
100%: Checks: 16, Failures: 0, Errors: 0
./dist/check_sfmw_set_mtime.bin
Running suite(s): SFMW_Set_Mtime
100%: Checks: 24, Failures: 0, Errors: 0
./dist/check_sfmw_set_mtime_now.bin
Running suite(s): SFMW_Set_Mtime_Now
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmw_set_ownership.bin
Running suite(s): SFMW_Set_Ownership
100%: Checks: 20, Failures: 0, Errors: 0
./dist/check_sfmw_set_times.bin
Running suite(s): SFMW_Set_Times
100%: Checks: 24, Failures: 0, Errors: 0
./dist/check_sfmw_set_times_now.bin
Running suite(s): SFMW_Set_Times_Now
100%: Checks: 11, Failures: 0, Errors: 0

==59009== Memcheck, a memory error detector
==59009== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59009== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59009== Command: code/dist/check_sdo_create_dir.bin
==59009== 
Running suite(s): SDO_Create_Dir
100%: Checks: 20, Failures: 0, Errors: 0
==59009== 
==59009== HEAP SUMMARY:
==59009==     in use at exit: 0 bytes in 0 blocks
==59009==   total heap usage: 1,142 allocs, 1,142 frees, 535,502 bytes allocated
==59009== 
==59009== All heap blocks were freed -- no leaks are possible
==59009== 
==59009== For lists of detected and suppressed errors, rerun with: -s
==59009== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59092== Memcheck, a memory error detector
==59092== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59092== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59092== Command: code/dist/check_sdo_delete_dir.bin
==59092== 
Running suite(s): SDO_Delete_Dir
100%: Checks: 11, Failures: 0, Errors: 0
==59092== 
==59092== HEAP SUMMARY:
==59092==     in use at exit: 0 bytes in 0 blocks
==59092==   total heap usage: 379 allocs, 379 frees, 174,636 bytes allocated
==59092== 
==59092== All heap blocks were freed -- no leaks are possible
==59092== 
==59092== For lists of detected and suppressed errors, rerun with: -s
==59092== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59097== Memcheck, a memory error detector
==59097== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59097== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59097== Command: code/dist/check_sdo_destroy_dir.bin
==59097== 
Running suite(s): SDO_Destroy_Dir
100%: Checks: 16, Failures: 0, Errors: 0
==59097== 
==59097== HEAP SUMMARY:
==59097==     in use at exit: 0 bytes in 0 blocks
==59097==   total heap usage: 1,100 allocs, 1,100 frees, 1,556,064 bytes allocated
==59097== 
==59097== All heap blocks were freed -- no leaks are possible
==59097== 
==59097== For lists of detected and suppressed errors, rerun with: -s
==59097== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59126== Memcheck, a memory error detector
==59126== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59126== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59126== Command: code/dist/check_sdo_read_dir_contents.bin
==59126== 
Running suite(s): SDO_Read_Dir_Contents
100%: Checks: 27, Failures: 0, Errors: 0
==59126== 
==59126== HEAP SUMMARY:
==59126==     in use at exit: 0 bytes in 0 blocks
==59126==   total heap usage: 4,188 allocs, 4,188 frees, 2,665,082 bytes allocated
==59126== 
==59126== All heap blocks were freed -- no leaks are possible
==59126== 
==59126== For lists of detected and suppressed errors, rerun with: -s
==59126== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59313== Memcheck, a memory error detector
==59313== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59313== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59313== Command: code/dist/check_sfc_is_close_on_exec.bin
==59313== 
Running suite(s): SFC_Is_Close_On_Exec
100%: Checks: 11, Failures: 0, Errors: 0
==59313== 
==59313== HEAP SUMMARY:
==59313==     in use at exit: 0 bytes in 0 blocks
==59313==   total heap usage: 1,293 allocs, 1,293 frees, 380,239 bytes allocated
==59313== 
==59313== All heap blocks were freed -- no leaks are possible
==59313== 
==59313== For lists of detected and suppressed errors, rerun with: -s
==59313== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59336== Memcheck, a memory error detector
==59336== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59336== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59336== Command: code/dist/check_sfl_create_hard_link.bin
==59336== 
Running suite(s): SFL_Create_Hard_Link
100%: Checks: 14, Failures: 0, Errors: 0
==59336== 
==59336== HEAP SUMMARY:
==59336==     in use at exit: 0 bytes in 0 blocks
==59336==   total heap usage: 1,537 allocs, 1,537 frees, 477,742 bytes allocated
==59336== 
==59336== All heap blocks were freed -- no leaks are possible
==59336== 
==59336== For lists of detected and suppressed errors, rerun with: -s
==59336== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59365== Memcheck, a memory error detector
==59365== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59365== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59365== Command: code/dist/check_sfl_create_sym_link.bin
==59365== 
Running suite(s): SFL_Create_Sym_Link
100%: Checks: 14, Failures: 0, Errors: 0
==59365== 
==59365== HEAP SUMMARY:
==59365==     in use at exit: 0 bytes in 0 blocks
==59365==   total heap usage: 1,513 allocs, 1,513 frees, 476,691 bytes allocated
==59365== 
==59365== All heap blocks were freed -- no leaks are possible
==59365== 
==59365== For lists of detected and suppressed errors, rerun with: -s
==59365== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59394== Memcheck, a memory error detector
==59394== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59394== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59394== Command: code/dist/check_sfmr_get_access_time.bin
==59394== 
Running suite(s): SFMR_Get_Access_Time
100%: Checks: 11, Failures: 0, Errors: 0
==59394== 
==59394== HEAP SUMMARY:
==59394==     in use at exit: 0 bytes in 0 blocks
==59394==   total heap usage: 1,256 allocs, 1,256 frees, 410,552 bytes allocated
==59394== 
==59394== All heap blocks were freed -- no leaks are possible
==59394== 
==59394== For lists of detected and suppressed errors, rerun with: -s
==59394== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59431== Memcheck, a memory error detector
==59431== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59431== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59431== Command: code/dist/check_sfmr_get_block_count.bin
==59431== 
Running suite(s): SFMR_Get_Block_Count
100%: Checks: 11, Failures: 0, Errors: 0
==59431== 
==59431== HEAP SUMMARY:
==59431==     in use at exit: 0 bytes in 0 blocks
==59431==   total heap usage: 403 allocs, 403 frees, 195,701 bytes allocated
==59431== 
==59431== All heap blocks were freed -- no leaks are possible
==59431== 
==59431== For lists of detected and suppressed errors, rerun with: -s
==59431== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59446== Memcheck, a memory error detector
==59446== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59446== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59446== Command: code/dist/check_sfmr_get_block_size.bin
==59446== 
Running suite(s): SFMR_Get_Block_Size
100%: Checks: 11, Failures: 0, Errors: 0
==59446== 
==59446== HEAP SUMMARY:
==59446==     in use at exit: 0 bytes in 0 blocks
==59446==   total heap usage: 395 allocs, 395 frees, 194,992 bytes allocated
==59446== 
==59446== All heap blocks were freed -- no leaks are possible
==59446== 
==59446== For lists of detected and suppressed errors, rerun with: -s
==59446== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59461== Memcheck, a memory error detector
==59461== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59461== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59461== Command: code/dist/check_sfmr_get_change_time.bin
==59461== 
Running suite(s): SFMR_Get_Change_Time
100%: Checks: 11, Failures: 0, Errors: 0
==59461== 
==59461== HEAP SUMMARY:
==59461==     in use at exit: 0 bytes in 0 blocks
==59461==   total heap usage: 375 allocs, 375 frees, 194,672 bytes allocated
==59461== 
==59461== All heap blocks were freed -- no leaks are possible
==59461== 
==59461== For lists of detected and suppressed errors, rerun with: -s
==59461== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59476== Memcheck, a memory error detector
==59476== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59476== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59476== Command: code/dist/check_sfmr_get_container_device_id.bin
==59476== 
Running suite(s): SFMR_Get_Container_Device_ID
100%: Checks: 11, Failures: 0, Errors: 0
==59476== 
==59476== HEAP SUMMARY:
==59476==     in use at exit: 0 bytes in 0 blocks
==59476==   total heap usage: 318 allocs, 318 frees, 162,147 bytes allocated
==59476== 
==59476== All heap blocks were freed -- no leaks are possible
==59476== 
==59476== For lists of detected and suppressed errors, rerun with: -s
==59476== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59477== Memcheck, a memory error detector
==59477== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59477== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59477== Command: code/dist/check_sfmr_get_file_device_id.bin
==59477== 
Running suite(s): SFMR_Get_File_Device_ID
100%: Checks: 11, Failures: 0, Errors: 0
==59477== 
==59477== HEAP SUMMARY:
==59477==     in use at exit: 0 bytes in 0 blocks
==59477==   total heap usage: 403 allocs, 403 frees, 196,340 bytes allocated
==59477== 
==59477== All heap blocks were freed -- no leaks are possible
==59477== 
==59477== For lists of detected and suppressed errors, rerun with: -s
==59477== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59492== Memcheck, a memory error detector
==59492== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59492== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59492== Command: code/dist/check_sfmr_get_file_perms.bin
==59492== 
Running suite(s): SFMR_Get_File_Perms
100%: Checks: 11, Failures: 0, Errors: 0
==59492== 
==59492== HEAP SUMMARY:
==59492==     in use at exit: 0 bytes in 0 blocks
==59492==   total heap usage: 403 allocs, 403 frees, 195,488 bytes allocated
==59492== 
==59492== All heap blocks were freed -- no leaks are possible
==59492== 
==59492== For lists of detected and suppressed errors, rerun with: -s
==59492== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59507== Memcheck, a memory error detector
==59507== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59507== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59507== Command: code/dist/check_sfmr_get_file_type.bin
==59507== 
Running suite(s): SFMR_Get_File_Type
100%: Checks: 11, Failures: 0, Errors: 0
==59507== 
==59507== HEAP SUMMARY:
==59507==     in use at exit: 0 bytes in 0 blocks
==59507==   total heap usage: 301 allocs, 301 frees, 154,685 bytes allocated
==59507== 
==59507== All heap blocks were freed -- no leaks are possible
==59507== 
==59507== For lists of detected and suppressed errors, rerun with: -s
==59507== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59508== Memcheck, a memory error detector
==59508== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59508== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59508== Command: code/dist/check_sfmr_get_group.bin
==59508== 
Running suite(s): SFMR_Get_Group
100%: Checks: 12, Failures: 0, Errors: 0
==59508== 
==59508== HEAP SUMMARY:
==59508==     in use at exit: 0 bytes in 0 blocks
==59508==   total heap usage: 442 allocs, 442 frees, 213,025 bytes allocated
==59508== 
==59508== All heap blocks were freed -- no leaks are possible
==59508== 
==59508== For lists of detected and suppressed errors, rerun with: -s
==59508== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59525== Memcheck, a memory error detector
==59525== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59525== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59525== Command: code/dist/check_sfmr_get_hard_link_num.bin
==59525== 
Running suite(s): SFMR_Get_Hard_Link_Num
100%: Checks: 11, Failures: 0, Errors: 0
==59525== 
==59525== HEAP SUMMARY:
==59525==     in use at exit: 0 bytes in 0 blocks
==59525==   total heap usage: 403 allocs, 403 frees, 196,127 bytes allocated
==59525== 
==59525== All heap blocks were freed -- no leaks are possible
==59525== 
==59525== For lists of detected and suppressed errors, rerun with: -s
==59525== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59540== Memcheck, a memory error detector
==59540== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59540== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59540== Command: code/dist/check_sfmr_get_mod_time.bin
==59540== 
Running suite(s): SFMR_Get_Mod_Time
100%: Checks: 11, Failures: 0, Errors: 0
==59540== 
==59540== HEAP SUMMARY:
==59540==     in use at exit: 0 bytes in 0 blocks
==59540==   total heap usage: 375 allocs, 375 frees, 194,117 bytes allocated
==59540== 
==59540== All heap blocks were freed -- no leaks are possible
==59540== 
==59540== For lists of detected and suppressed errors, rerun with: -s
==59540== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59555== Memcheck, a memory error detector
==59555== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59555== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59555== Command: code/dist/check_sfmr_get_owner.bin
==59555== 
Running suite(s): SFMR_Get_Owner
100%: Checks: 12, Failures: 0, Errors: 0
==59555== 
==59555== HEAP SUMMARY:
==59555==     in use at exit: 0 bytes in 0 blocks
==59555==   total heap usage: 442 allocs, 442 frees, 213,025 bytes allocated
==59555== 
==59555== All heap blocks were freed -- no leaks are possible
==59555== 
==59555== For lists of detected and suppressed errors, rerun with: -s
==59555== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59572== Memcheck, a memory error detector
==59572== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59572== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59572== Command: code/dist/check_sfmr_get_serial_num.bin
==59572== 
Running suite(s): SFMR_Get_Serial_Num
100%: Checks: 11, Failures: 0, Errors: 0
==59572== 
==59572== HEAP SUMMARY:
==59572==     in use at exit: 0 bytes in 0 blocks
==59572==   total heap usage: 1,284 allocs, 1,284 frees, 411,396 bytes allocated
==59572== 
==59572== All heap blocks were freed -- no leaks are possible
==59572== 
==59572== For lists of detected and suppressed errors, rerun with: -s
==59572== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59609== Memcheck, a memory error detector
==59609== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59609== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59609== Command: code/dist/check_sfmr_get_size.bin
==59609== 
Running suite(s): SFMR_Get_Size
100%: Checks: 11, Failures: 0, Errors: 0
==59609== 
==59609== HEAP SUMMARY:
==59609==     in use at exit: 0 bytes in 0 blocks
==59609==   total heap usage: 403 allocs, 403 frees, 194,210 bytes allocated
==59609== 
==59609== All heap blocks were freed -- no leaks are possible
==59609== 
==59609== For lists of detected and suppressed errors, rerun with: -s
==59609== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59624== Memcheck, a memory error detector
==59624== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59624== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59624== Command: code/dist/check_sfmr_is_block_device.bin
==59624== 
Running suite(s): SFMR_Is_Block_Device
100%: Checks: 11, Failures: 0, Errors: 0
==59624== 
==59624== HEAP SUMMARY:
==59624==     in use at exit: 0 bytes in 0 blocks
==59624==   total heap usage: 301 allocs, 301 frees, 154,997 bytes allocated
==59624== 
==59624== All heap blocks were freed -- no leaks are possible
==59624== 
==59624== For lists of detected and suppressed errors, rerun with: -s
==59624== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59625== Memcheck, a memory error detector
==59625== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59625== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59625== Command: code/dist/check_sfmr_is_character_device.bin
==59625== 
Running suite(s): SFMR_Is_Character_Device
100%: Checks: 11, Failures: 0, Errors: 0
==59625== 
==59625== HEAP SUMMARY:
==59625==     in use at exit: 0 bytes in 0 blocks
==59625==   total heap usage: 301 allocs, 301 frees, 155,621 bytes allocated
==59625== 
==59625== All heap blocks were freed -- no leaks are possible
==59625== 
==59625== For lists of detected and suppressed errors, rerun with: -s
==59625== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59626== Memcheck, a memory error detector
==59626== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59626== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59626== Command: code/dist/check_sfmr_is_directory.bin
==59626== 
Running suite(s): SFMR_Is_Directory
100%: Checks: 11, Failures: 0, Errors: 0
==59626== 
==59626== HEAP SUMMARY:
==59626==     in use at exit: 0 bytes in 0 blocks
==59626==   total heap usage: 301 allocs, 301 frees, 154,529 bytes allocated
==59626== 
==59626== All heap blocks were freed -- no leaks are possible
==59626== 
==59626== For lists of detected and suppressed errors, rerun with: -s
==59626== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59627== Memcheck, a memory error detector
==59627== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59627== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59627== Command: code/dist/check_sfmr_is_named_pipe.bin
==59627== 
Running suite(s): SFMR_Is_Named_Pipe
100%: Checks: 11, Failures: 0, Errors: 0
==59627== 
==59627== HEAP SUMMARY:
==59627==     in use at exit: 0 bytes in 0 blocks
==59627==   total heap usage: 301 allocs, 301 frees, 154,685 bytes allocated
==59627== 
==59627== All heap blocks were freed -- no leaks are possible
==59627== 
==59627== For lists of detected and suppressed errors, rerun with: -s
==59627== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59628== Memcheck, a memory error detector
==59628== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59628== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59628== Command: code/dist/check_sfmr_is_regular_file.bin
==59628== 
Running suite(s): SFMR_Is_Regular_File
100%: Checks: 11, Failures: 0, Errors: 0
==59628== 
==59628== HEAP SUMMARY:
==59628==     in use at exit: 0 bytes in 0 blocks
==59628==   total heap usage: 301 allocs, 301 frees, 154,997 bytes allocated
==59628== 
==59628== All heap blocks were freed -- no leaks are possible
==59628== 
==59628== For lists of detected and suppressed errors, rerun with: -s
==59628== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59629== Memcheck, a memory error detector
==59629== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59629== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59629== Command: code/dist/check_sfmr_is_socket.bin
==59629== 
Running suite(s): SFMR_Is_Socket
100%: Checks: 11, Failures: 0, Errors: 0
==59629== 
==59629== HEAP SUMMARY:
==59629==     in use at exit: 0 bytes in 0 blocks
==59629==   total heap usage: 301 allocs, 301 frees, 154,061 bytes allocated
==59629== 
==59629== All heap blocks were freed -- no leaks are possible
==59629== 
==59629== For lists of detected and suppressed errors, rerun with: -s
==59629== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59630== Memcheck, a memory error detector
==59630== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59630== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59630== Command: code/dist/check_sfmr_is_sym_link.bin
==59630== 
Running suite(s): SFMR_Is_Sym_Link
100%: Checks: 11, Failures: 0, Errors: 0
==59630== 
==59630== HEAP SUMMARY:
==59630==     in use at exit: 0 bytes in 0 blocks
==59630==   total heap usage: 301 allocs, 301 frees, 154,373 bytes allocated
==59630== 
==59630== All heap blocks were freed -- no leaks are possible
==59630== 
==59630== For lists of detected and suppressed errors, rerun with: -s
==59630== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==59631== Memcheck, a memory error detector
==59631== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==59631== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==59631== Command: code/dist/check_sfmw_add_mode.bin
==59631== 
Running suite(s): SFMW_Add_Mode
100%: Checks: 16, Failures: 0, Errors: 0
==59631== 
==59631== HEAP SUMMARY:
==59631==     in use at exit: 0 bytes in 0 blocks
==59631==   total heap usage: 5,321 allocs, 5,321 frees, 1,417,570 bytes allocated
==59631== 
==59631== All heap blocks were freed -- no leaks are possible
==59631== 
==59631== For lists of detected and suppressed errors, rerun with: -s
==59631== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==60000== Memcheck, a memory error detector
==60000== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==60000== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==60000== Command: code/dist/check_sfmw_remove_mode.bin
==60000== 
Running suite(s): SFMW_Remove_Mode
100%: Checks: 16, Failures: 0, Errors: 0
==60000== 
==60000== HEAP SUMMARY:
==60000==     in use at exit: 0 bytes in 0 blocks
==60000==   total heap usage: 5,321 allocs, 5,321 frees, 1,429,537 bytes allocated
==60000== 
==60000== All heap blocks were freed -- no leaks are possible
==60000== 
==60000== For lists of detected and suppressed errors, rerun with: -s
==60000== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==60369== Memcheck, a memory error detector
==60369== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==60369== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==60369== Command: code/dist/check_sfmw_set_atime.bin
==60369== 
Running suite(s): SFMW_Set_Atime
100%: Checks: 24, Failures: 0, Errors: 0
==60369== 
==60369== HEAP SUMMARY:
==60369==     in use at exit: 0 bytes in 0 blocks
==60369==   total heap usage: 2,628 allocs, 2,628 frees, 706,269 bytes allocated
==60369== 
==60369== All heap blocks were freed -- no leaks are possible
==60369== 
==60369== For lists of detected and suppressed errors, rerun with: -s
==60369== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==60370== Memcheck, a memory error detector
==60370== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==60370== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==60370== Command: code/dist/check_sfmw_set_atime_now.bin
==60370== 
Running suite(s): SFMW_Set_Atime_Now
100%: Checks: 11, Failures: 0, Errors: 0
==60370== 
==60370== HEAP SUMMARY:
==60370==     in use at exit: 0 bytes in 0 blocks
==60370==   total heap usage: 738 allocs, 738 frees, 315,349 bytes allocated
==60370== 
==60370== All heap blocks were freed -- no leaks are possible
==60370== 
==60370== For lists of detected and suppressed errors, rerun with: -s
==60370== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==60371== Memcheck, a memory error detector
==60371== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==60371== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==60371== Command: code/dist/check_sfmw_set_mode.bin
==60371== 
Running suite(s): SFMW_Set_Mode
100%: Checks: 16, Failures: 0, Errors: 0
==60371== 
==60371== HEAP SUMMARY:
==60371==     in use at exit: 0 bytes in 0 blocks
==60371==   total heap usage: 5,225 allocs, 5,225 frees, 1,359,890 bytes allocated
==60371== 
==60371== All heap blocks were freed -- no leaks are possible
==60371== 
==60371== For lists of detected and suppressed errors, rerun with: -s
==60371== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==60716== Memcheck, a memory error detector
==60716== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==60716== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==60716== Command: code/dist/check_sfmw_set_mtime.bin
==60716== 
Running suite(s): SFMW_Set_Mtime
100%: Checks: 24, Failures: 0, Errors: 0
==60716== 
==60716== HEAP SUMMARY:
==60716==     in use at exit: 0 bytes in 0 blocks
==60716==   total heap usage: 2,628 allocs, 2,628 frees, 706,269 bytes allocated
==60716== 
==60716== All heap blocks were freed -- no leaks are possible
==60716== 
==60716== For lists of detected and suppressed errors, rerun with: -s
==60716== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==60717== Memcheck, a memory error detector
==60717== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==60717== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==60717== Command: code/dist/check_sfmw_set_mtime_now.bin
==60717== 
Running suite(s): SFMW_Set_Mtime_Now
100%: Checks: 11, Failures: 0, Errors: 0
==60717== 
==60717== HEAP SUMMARY:
==60717==     in use at exit: 0 bytes in 0 blocks
==60717==   total heap usage: 738 allocs, 738 frees, 315,349 bytes allocated
==60717== 
==60717== All heap blocks were freed -- no leaks are possible
==60717== 
==60717== For lists of detected and suppressed errors, rerun with: -s
==60717== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==60718== Memcheck, a memory error detector
==60718== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==60718== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==60718== Command: code/dist/check_sfmw_set_ownership.bin
==60718== 
Running suite(s): SFMW_Set_Ownership
100%: Checks: 20, Failures: 0, Errors: 0
==60718== 
==60718== HEAP SUMMARY:
==60718==     in use at exit: 0 bytes in 0 blocks
==60718==   total heap usage: 7,287 allocs, 7,287 frees, 1,517,442 bytes allocated
==60718== 
==60718== All heap blocks were freed -- no leaks are possible
==60718== 
==60718== For lists of detected and suppressed errors, rerun with: -s
==60718== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==60991== Memcheck, a memory error detector
==60991== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==60991== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==60991== Command: code/dist/check_sfmw_set_times.bin
==60991== 
Running suite(s): SFMW_Set_Times
100%: Checks: 24, Failures: 0, Errors: 0
==60991== 
==60991== HEAP SUMMARY:
==60991==     in use at exit: 0 bytes in 0 blocks
==60991==   total heap usage: 2,748 allocs, 2,748 frees, 709,959 bytes allocated
==60991== 
==60991== All heap blocks were freed -- no leaks are possible
==60991== 
==60991== For lists of detected and suppressed errors, rerun with: -s
==60991== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==60992== Memcheck, a memory error detector
==60992== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==60992== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==60992== Command: code/dist/check_sfmw_set_times_now.bin
==60992== 
Running suite(s): SFMW_Set_Times_Now
100%: Checks: 11, Failures: 0, Errors: 0
==60992== 
==60992== HEAP SUMMARY:
==60992==     in use at exit: 0 bytes in 0 blocks
==60992==   total heap usage: 802 allocs, 802 frees, 317,573 bytes allocated
==60992== 
==60992== All heap blocks were freed -- no leaks are possible
==60992== 
==60992== For lists of detected and suppressed errors, rerun with: -s
==60992== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

TOTAL CHECK UNIT TESTS: 519

*** Utilizing ltrace ***
The full command is 'ltrace --output /home/vagrant/Repos/sketchy-idea/code/test/test_output/ltrace_output.txt ./code/dist/test_sdo_read_dir_contents.bin /home/vagrant/Repos/sketchy-idea/code/test/test_input'
Command output:
The contents of '/home/vagrant/Repos/sketchy-idea/code/test/test_input':
	/home/vagrant/Repos/sketchy-idea/code/test/test_input/regular_file.txt
	/home/vagrant/Repos/sketchy-idea/code/test/test_input/sym_link.txt



/home/vagrant/Repos/sketchy-idea/code/test/test_output/ltrace_output.txt OUTPUT:

The full command is 'cat /home/vagrant/Repos/sketchy-idea/code/test/test_output/ltrace_output.txt'
Command output:
stat(0x7ffcebc8143b, 0x7ffcebc7f210, 0x7ffcebc7f210, 0x7ffcebc7f210) = 0
opendir("/home/vagrant/Repos/sketchy-idea"...)   = 0x5629aa9082a0
__errno_location()                               = 0x7fa45f2286c0
readdir(0x5629aa9082a0)                          = 0x5629aa9082d0
strcmp(".", "..")                                = -46
strcmp("..", "..")                               = 0
__errno_location()                               = 0x7fa45f2286c0
readdir(0x5629aa9082a0)                          = 0x5629aa9082e8
strcmp(".", "regular_file.txt")                  = -68
strcmp("..", "regular_file.txt")                 = -68
calloc(8, 8)                                     = 0x5629aa9102e0
strlen("/home/vagrant/Repos/sketchy-idea"...)    = 53
strncpy(0x7ffcebc7e190, "/home/vagrant/Repos/sketchy-idea"..., 54) = 0x7ffcebc7e190
strlen("/home/vagrant/Repos/sketchy-idea"...)    = 53
strlen("/home/vagrant/Repos/sketchy-idea"...)    = 53
strlen("/home/vagrant/Repos/sketchy-idea"...)    = 54
strncat(0x7ffcebc7e190, 0x5629aa9082fb, 4045, 0x5629aa9082fb) = 0x7ffcebc7e190
strlen("/home/vagrant/Repos/sketchy-idea"...)    = 70
calloc(71, 1)                                    = 0x5629aa910330
strncpy(0x5629aa910330, "/home/vagrant/Repos/sketchy-idea"..., 70) = 0x5629aa910330
__errno_location()                               = 0x7fa45f2286c0
readdir(0x5629aa9082a0)                          = 0x5629aa908310
strcmp(".", ".")                                 = 0
__errno_location()                               = 0x7fa45f2286c0
readdir(0x5629aa9082a0)                          = 0x5629aa908328
strcmp(".", "sym_link.txt")                      = -69
strcmp("..", "sym_link.txt")                     = -69
strlen("/home/vagrant/Repos/sketchy-idea"...)    = 53
strncpy(0x7ffcebc7e190, "/home/vagrant/Repos/sketchy-idea"..., 54) = 0x7ffcebc7e190
strlen("/home/vagrant/Repos/sketchy-idea"...)    = 53
strlen("/home/vagrant/Repos/sketchy-idea"...)    = 53
strlen("/home/vagrant/Repos/sketchy-idea"...)    = 54
strncat(0x7ffcebc7e190, 0x5629aa90833b, 4045, 0x5629aa90833b) = 0x7ffcebc7e190
strlen("/home/vagrant/Repos/sketchy-idea"...)    = 66
calloc(67, 1)                                    = 0x5629aa910380
strncpy(0x5629aa910380, "/home/vagrant/Repos/sketchy-idea"..., 66) = 0x5629aa910380
__errno_location()                               = 0x7fa45f2286c0
readdir(0x5629aa9082a0)                          = 0
__errno_location()                               = 0x7fa45f2286c0
closedir(0x5629aa9082a0)                         = 0
printf("The contents of '%s':\n", "/home/vagrant/Repos/sketchy-idea"...) = 73
printf("\t%s\n", "/home/vagrant/Repos/sketchy-idea"...) = 72
printf("\t%s\n", "/home/vagrant/Repos/sketchy-idea"...) = 68
free(0x5629aa910330)                             = <void>
free(0x5629aa910380)                             = <void>
free(0x5629aa9102e0)                             = <void>
exit(0 <no return ...>
+++ exited (status 0) +++


*** Utilizing strace ***
The full command is 'strace --output=/home/vagrant/Repos/sketchy-idea/code/test/test_output/strace_output.txt ./code/dist/test_sdo_read_dir_contents.bin /home/vagrant/Repos/sketchy-idea/code/test/test_input'
Command output:
The contents of '/home/vagrant/Repos/sketchy-idea/code/test/test_input':
	/home/vagrant/Repos/sketchy-idea/code/test/test_input/regular_file.txt
	/home/vagrant/Repos/sketchy-idea/code/test/test_input/sym_link.txt



/home/vagrant/Repos/sketchy-idea/code/test/test_output/strace_output.txt OUTPUT:

The full command is 'cat /home/vagrant/Repos/sketchy-idea/code/test/test_output/strace_output.txt'
Command output:
execve("./code/dist/test_sdo_read_dir_contents.bin", ["./code/dist/test_sdo_read_dir_co"..., "/home/vagrant/Repos/sketchy-idea"...], 0x7fffb3564590 /* 43 vars */) = 0
brk(NULL)                               = 0x561750178000
arch_prctl(0x3001 /* ARCH_??? */, 0x7fffd1571950) = -1 EINVAL (Invalid argument)
mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ffa5c3da000
access("/etc/ld.so.preload", R_OK)      = -1 ENOENT (No such file or directory)
openat(AT_FDCWD, "/etc/ld.so.cache", O_RDONLY|O_CLOEXEC) = 3
newfstatat(3, "", {st_mode=S_IFREG|0644, st_size=57739, ...}, AT_EMPTY_PATH) = 0
mmap(NULL, 57739, PROT_READ, MAP_PRIVATE, 3, 0) = 0x7ffa5c3cb000
close(3)                                = 0
openat(AT_FDCWD, "/lib/x86_64-linux-gnu/libc.so.6", O_RDONLY|O_CLOEXEC) = 3
read(3, "\177ELF\2\1\1\3\0\0\0\0\0\0\0\0\3\0>\0\1\0\0\0P\237\2\0\0\0\0\0"..., 832) = 832
pread64(3, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0"..., 784, 64) = 784
pread64(3, "\4\0\0\0 \0\0\0\5\0\0\0GNU\0\2\0\0\300\4\0\0\0\3\0\0\0\0\0\0\0"..., 48, 848) = 48
pread64(3, "\4\0\0\0\24\0\0\0\3\0\0\0GNU\0\315A\vq\17\17\tLh2\355\331Y1\0m"..., 68, 896) = 68
newfstatat(3, "", {st_mode=S_IFREG|0755, st_size=2220400, ...}, AT_EMPTY_PATH) = 0
pread64(3, "\6\0\0\0\4\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0@\0\0\0\0\0\0\0"..., 784, 64) = 784
mmap(NULL, 2264656, PROT_READ, MAP_PRIVATE|MAP_DENYWRITE, 3, 0) = 0x7ffa5c1a2000
mprotect(0x7ffa5c1ca000, 2023424, PROT_NONE) = 0
mmap(0x7ffa5c1ca000, 1658880, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x28000) = 0x7ffa5c1ca000
mmap(0x7ffa5c35f000, 360448, PROT_READ, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x1bd000) = 0x7ffa5c35f000
mmap(0x7ffa5c3b8000, 24576, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 3, 0x215000) = 0x7ffa5c3b8000
mmap(0x7ffa5c3be000, 52816, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_ANONYMOUS, -1, 0) = 0x7ffa5c3be000
close(3)                                = 0
mmap(NULL, 12288, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7ffa5c19f000
arch_prctl(ARCH_SET_FS, 0x7ffa5c19f740) = 0
set_tid_address(0x7ffa5c19fa10)         = 63506
set_robust_list(0x7ffa5c19fa20, 24)     = 0
rseq(0x7ffa5c1a00e0, 0x20, 0, 0x53053053) = 0
mprotect(0x7ffa5c3b8000, 16384, PROT_READ) = 0
mprotect(0x561738565000, 4096, PROT_READ) = 0
mprotect(0x7ffa5c414000, 8192, PROT_READ) = 0
prlimit64(0, RLIMIT_STACK, NULL, {rlim_cur=8192*1024, rlim_max=RLIM64_INFINITY}) = 0
munmap(0x7ffa5c3cb000, 57739)           = 0
newfstatat(AT_FDCWD, "/home/vagrant/Repos/sketchy-idea/code/test/test_input", {st_mode=S_IFDIR|0775, st_size=4096, ...}, 0) = 0
openat(AT_FDCWD, "/home/vagrant/Repos/sketchy-idea/code/test/test_input", O_RDONLY|O_NONBLOCK|O_CLOEXEC|O_DIRECTORY) = 3
newfstatat(3, "", {st_mode=S_IFDIR|0775, st_size=4096, ...}, AT_EMPTY_PATH) = 0
getrandom("\x54\x8f\xda\x58\xce\x7b\x80\x35", 8, GRND_NONBLOCK) = 8
brk(NULL)                               = 0x561750178000
brk(0x561750199000)                     = 0x561750199000
getdents64(3, 0x5617501782d0 /* 4 entries */, 32768) = 120
getdents64(3, 0x5617501782d0 /* 0 entries */, 32768) = 0
close(3)                                = 0
newfstatat(1, "", {st_mode=S_IFREG|0664, st_size=47479, ...}, AT_EMPTY_PATH) = 0
write(1, "The contents of '/home/vagrant/R"..., 213) = 213
exit_group(0)                           = ?
+++ exited with 0 +++


