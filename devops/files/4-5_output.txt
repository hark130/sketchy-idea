
*** This output was created by 4-5_export.sh on Thu Jul  3 19:49:32 UTC 2025 ***

VALIDATING
    Validating gcc
        [✓] gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    Validating glibc
        [✓] ldd (Ubuntu GLIBC 2.35-0ubuntu3.10) 2.35
    Validating Check
        [✓] Check unit test version: (0) (15) (2)
    Validating musl-gcc
        [✓] x86_64-linux-gnu-gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0

CLEANING
    Cleaning dist/ directory

COMPILING
    Compiling: src/devops_code.c
    Compiling: src/skid_assembly.c
    Compiling: src/skid_dir_operations.c
    Compiling: src/skid_file_control.c
    Compiling: src/skid_file_descriptors.c
    Compiling: src/skid_file_link.c
    Compiling: src/skid_file_metadata_read.c
    Compiling: src/skid_file_metadata_write.c
    Compiling: src/skid_file_operations.c
    Compiling: src/skid_memory.c
    Compiling: src/skid_network.c
    Compiling: src/skid_signal_handlers.c
    Compiling: src/skid_signals.c
    Compiling: src/skid_time.c
    Compiling: src/skid_validation.c
    Compiling: src/unit_test_code.c
    Compiling manual test object code: dist/test_devops_code_create_path_tree.o
    Linking manual test binary: dist/test_devops_code_create_path_tree.bin
    Compiling manual test object code: dist/test_devops_code_get_compatible_gid.o
    Linking manual test binary: dist/test_devops_code_get_compatible_gid.bin
    Compiling manual test object code: dist/test_feature_test_macros.o
    Linking manual test binary: dist/test_feature_test_macros.bin
    Compiling manual test object code: dist/test_libskid_sa_read_cpu_tsc.o
    Linking manual test binary against libsketchyidea: dist/test_libskid_sa_read_cpu_tsc.bin
    Compiling manual test object code: dist/test_libskid_sdo_read_dir_contents.o
    Linking manual test binary against libsketchyidea: dist/test_libskid_sdo_read_dir_contents.bin
    Compiling manual test object code: dist/test_libskid_sfmr_get_file_perms.o
    Linking manual test binary against libsketchyidea: dist/test_libskid_sfmr_get_file_perms.bin
    Statically compiling bespoke binary: dist/test_misc_glibc_vs_musl-static_glibc.bin
    Statically compiling bespoke binary: dist/test_misc_glibc_vs_musl-static_musl.bin
    Compiling manual test object code: dist/test_misc_packed_macro.o
    Linking manual test binary: dist/test_misc_packed_macro.bin
    Compiling manual test object code: dist/test_misc_setjmp_longjmp.o
    Linking manual test binary: dist/test_misc_setjmp_longjmp.bin
    Compiling bespoke binary: dist/test_misc_sfmr_call_stat.bin
    Compiling manual test object code: dist/test_sa_read_cpu_tsc.o
    Linking manual test binary: dist/test_sa_read_cpu_tsc.bin
    Compiling manual test object code: dist/test_sdo_read_dir_contents.o
    Linking manual test binary: dist/test_sdo_read_dir_contents.bin
    Compiling manual test object code: dist/test_sfc_lock_and_write_fd.o
    Linking manual test binary: dist/test_sfc_lock_and_write_fd.bin
    Compiling manual test object code: dist/test_sfc_read_locked_fd.o
    Linking manual test binary: dist/test_sfc_read_locked_fd.bin
    Compiling manual test object code: dist/test_sfc_write_locked_fd.o
    Linking manual test binary: dist/test_sfc_write_locked_fd.bin
    Compiling manual test object code: dist/test_sfl_create_hard_link.o
    Linking manual test binary: dist/test_sfl_create_hard_link.bin
    Compiling manual test object code: dist/test_sfl_create_sym_link.o
    Linking manual test binary: dist/test_sfl_create_sym_link.bin
    Compiling manual test object code: dist/test_sfmr_file_metadata.o
    Linking manual test binary: dist/test_sfmr_file_metadata.bin
    Compiling manual test object code: dist/test_sfmr_get_block_size.o
    Linking manual test binary: dist/test_sfmr_get_block_size.bin
    Compiling manual test object code: dist/test_sfmr_get_container_device_id.o
    Linking manual test binary: dist/test_sfmr_get_container_device_id.bin
    Compiling manual test object code: dist/test_sfmr_get_file_device_id.o
    Linking manual test binary: dist/test_sfmr_get_file_device_id.bin
    Compiling manual test object code: dist/test_sfmr_get_file_perms.o
    Linking manual test binary: dist/test_sfmr_get_file_perms.bin
    Compiling manual test object code: dist/test_sfmr_get_file_times.o
    Linking manual test binary: dist/test_sfmr_get_file_times.bin
    Compiling manual test object code: dist/test_sfmr_is_block_device.o
    Linking manual test binary: dist/test_sfmr_is_block_device.bin
    Compiling manual test object code: dist/test_sfmr_is_character_device.o
    Linking manual test binary: dist/test_sfmr_is_character_device.bin
    Compiling manual test object code: dist/test_sfmr_is_named_pipe.o
    Linking manual test binary: dist/test_sfmr_is_named_pipe.bin
    Compiling manual test object code: dist/test_sfmr_is_regular_file.o
    Linking manual test binary: dist/test_sfmr_is_regular_file.bin
    Compiling manual test object code: dist/test_sfmr_is_symbolic_link.o
    Linking manual test binary: dist/test_sfmr_is_symbolic_link.bin
    Compiling manual test object code: dist/test_sfmw_set_atime_now.o
    Linking manual test binary: dist/test_sfmw_set_atime_now.bin
    Compiling manual test object code: dist/test_sfmw_set_ownership.o
    Linking manual test binary: dist/test_sfmw_set_ownership.bin
    Compiling manual test object code: dist/test_sfmw_set_times.o
    Linking manual test binary: dist/test_sfmw_set_times.bin
    Compiling manual test object code: dist/test_sm_handle_ext_read_queue_ptr.o
    Linking manual test binary: dist/test_sm_handle_ext_read_queue_ptr.bin
    Compiling manual test object code: dist/test_sm_mapped_memory.o
    Linking manual test binary: dist/test_sm_mapped_memory.bin
    Compiling manual test object code: dist/test_sm_raii_string_macro.o
    Linking manual test binary: dist/test_sm_raii_string_macro.bin
    Compiling manual test object code: dist/test_sm_raii_void_macro.o
    Linking manual test binary: dist/test_sm_raii_void_macro.bin
    Compiling manual test object code: dist/test_sn_multi_sniffer.o
    Linking manual test binary: dist/test_sn_multi_sniffer.bin
    Compiling manual test object code: dist/test_sn_simple_dgram_client.o
    Linking manual test binary: dist/test_sn_simple_dgram_client.bin
    Compiling manual test object code: dist/test_sn_simple_dgram_server.o
    Linking manual test binary: dist/test_sn_simple_dgram_server.bin
    Compiling manual test object code: dist/test_sn_simple_sniffer.o
    Linking manual test binary: dist/test_sn_simple_sniffer.bin
    Compiling manual test object code: dist/test_sn_simple_stream_client.o
    Linking manual test binary: dist/test_sn_simple_stream_client.bin
    Compiling manual test object code: dist/test_sn_simple_stream_server.o
    Linking manual test binary: dist/test_sn_simple_stream_server.bin
    Compiling manual test object code: dist/test_ss_block_unblock.o
    Linking manual test binary: dist/test_ss_block_unblock.bin
    Compiling manual test object code: dist/test_ssh_handle_ext_async_client.o
    Linking manual test binary: dist/test_ssh_handle_ext_async_client.bin
    Compiling manual test object code: dist/test_ssh_handle_ext_async_server.o
    Linking manual test binary: dist/test_ssh_handle_ext_async_server.bin
    Compiling manual test object code: dist/test_ssh_handle_ext_read_queue_int.o
    Linking manual test binary: dist/test_ssh_handle_ext_read_queue_int.bin
    Compiling manual test object code: dist/test_ssh_handle_ext_sending_process.o
    Linking manual test binary: dist/test_ssh_handle_ext_sending_process.bin
    Compiling manual test object code: dist/test_ssh_handle_ext_signal_code.o
    Linking manual test binary: dist/test_ssh_handle_ext_signal_code.bin
    Compiling manual test object code: dist/test_ssh_handle_interruptions.o
    Linking manual test binary: dist/test_ssh_handle_interruptions.bin
    Compiling manual test object code: dist/test_ssh_handle_signal_number.o
    Linking manual test binary: dist/test_ssh_handle_signal_number.bin
    Compiling bespoke binary: dist/redirect_bin_output.bin
    Compiling Check unit test code: test/check_sdo_create_dir.c
    Linking Check unit test binary: dist/check_sdo_create_dir.bin
    Compiling Check unit test code: test/check_sdo_delete_dir.c
    Linking Check unit test binary: dist/check_sdo_delete_dir.bin
    Compiling Check unit test code: test/check_sdo_destroy_dir.c
    Linking Check unit test binary: dist/check_sdo_destroy_dir.bin
    Compiling Check unit test code: test/check_sdo_read_dir_contents.c
    Linking Check unit test binary: dist/check_sdo_read_dir_contents.bin
    Compiling Check unit test code: test/check_sfc_is_close_on_exec.c
    Linking Check unit test binary: dist/check_sfc_is_close_on_exec.bin
    Compiling Check unit test code: test/check_sfl_create_hard_link.c
    Linking Check unit test binary: dist/check_sfl_create_hard_link.bin
    Compiling Check unit test code: test/check_sfl_create_sym_link.c
    Linking Check unit test binary: dist/check_sfl_create_sym_link.bin
    Compiling Check unit test code: test/check_sfmr_get_access_time.c
    Linking Check unit test binary: dist/check_sfmr_get_access_time.bin
    Compiling Check unit test code: test/check_sfmr_get_block_count.c
    Linking Check unit test binary: dist/check_sfmr_get_block_count.bin
    Compiling Check unit test code: test/check_sfmr_get_block_size.c
    Linking Check unit test binary: dist/check_sfmr_get_block_size.bin
    Compiling Check unit test code: test/check_sfmr_get_change_time.c
    Linking Check unit test binary: dist/check_sfmr_get_change_time.bin
    Compiling Check unit test code: test/check_sfmr_get_container_device_id.c
    Linking Check unit test binary: dist/check_sfmr_get_container_device_id.bin
    Compiling Check unit test code: test/check_sfmr_get_file_device_id.c
    Linking Check unit test binary: dist/check_sfmr_get_file_device_id.bin
    Compiling Check unit test code: test/check_sfmr_get_file_perms.c
    Linking Check unit test binary: dist/check_sfmr_get_file_perms.bin
    Compiling Check unit test code: test/check_sfmr_get_file_type.c
    Linking Check unit test binary: dist/check_sfmr_get_file_type.bin
    Compiling Check unit test code: test/check_sfmr_get_group.c
    Linking Check unit test binary: dist/check_sfmr_get_group.bin
    Compiling Check unit test code: test/check_sfmr_get_hard_link_num.c
    Linking Check unit test binary: dist/check_sfmr_get_hard_link_num.bin
    Compiling Check unit test code: test/check_sfmr_get_mod_time.c
    Linking Check unit test binary: dist/check_sfmr_get_mod_time.bin
    Compiling Check unit test code: test/check_sfmr_get_owner.c
    Linking Check unit test binary: dist/check_sfmr_get_owner.bin
    Compiling Check unit test code: test/check_sfmr_get_serial_num.c
    Linking Check unit test binary: dist/check_sfmr_get_serial_num.bin
    Compiling Check unit test code: test/check_sfmr_get_size.c
    Linking Check unit test binary: dist/check_sfmr_get_size.bin
    Compiling Check unit test code: test/check_sfmr_is_block_device.c
    Linking Check unit test binary: dist/check_sfmr_is_block_device.bin
    Compiling Check unit test code: test/check_sfmr_is_character_device.c
    Linking Check unit test binary: dist/check_sfmr_is_character_device.bin
    Compiling Check unit test code: test/check_sfmr_is_directory.c
    Linking Check unit test binary: dist/check_sfmr_is_directory.bin
    Compiling Check unit test code: test/check_sfmr_is_named_pipe.c
    Linking Check unit test binary: dist/check_sfmr_is_named_pipe.bin
    Compiling Check unit test code: test/check_sfmr_is_regular_file.c
    Linking Check unit test binary: dist/check_sfmr_is_regular_file.bin
    Compiling Check unit test code: test/check_sfmr_is_socket.c
    Linking Check unit test binary: dist/check_sfmr_is_socket.bin
    Compiling Check unit test code: test/check_sfmr_is_sym_link.c
    Linking Check unit test binary: dist/check_sfmr_is_sym_link.bin
    Compiling Check unit test code: test/check_sfmw_add_mode.c
    Linking Check unit test binary: dist/check_sfmw_add_mode.bin
    Compiling Check unit test code: test/check_sfmw_remove_mode.c
    Linking Check unit test binary: dist/check_sfmw_remove_mode.bin
    Compiling Check unit test code: test/check_sfmw_set_atime.c
    Linking Check unit test binary: dist/check_sfmw_set_atime.bin
    Compiling Check unit test code: test/check_sfmw_set_atime_now.c
    Linking Check unit test binary: dist/check_sfmw_set_atime_now.bin
    Compiling Check unit test code: test/check_sfmw_set_mode.c
    Linking Check unit test binary: dist/check_sfmw_set_mode.bin
    Compiling Check unit test code: test/check_sfmw_set_mtime.c
    Linking Check unit test binary: dist/check_sfmw_set_mtime.bin
    Compiling Check unit test code: test/check_sfmw_set_mtime_now.c
    Linking Check unit test binary: dist/check_sfmw_set_mtime_now.bin
    Compiling Check unit test code: test/check_sfmw_set_ownership.c
    Linking Check unit test binary: dist/check_sfmw_set_ownership.bin
    Compiling Check unit test code: test/check_sfmw_set_times.c
    Linking Check unit test binary: dist/check_sfmw_set_times.bin
    Compiling Check unit test code: test/check_sfmw_set_times_now.c
    Linking Check unit test binary: dist/check_sfmw_set_times_now.bin
    Compiling Check unit test code: test/check_sv_validate_pathname.c
    Linking Check unit test binary: dist/check_sv_validate_pathname.bin

RUNNING TEST CASES
./dist/check_sdo_create_dir.bin
Running suite(s): SDO_Create_Dir
100%: Checks: 20, Failures: 0, Errors: 0
./dist/check_sdo_delete_dir.bin
Running suite(s): SDO_Delete_Dir
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sdo_destroy_dir.bin
Running suite(s): SDO_Destroy_Dir
100%: Checks: 16, Failures: 0, Errors: 0
./dist/check_sdo_read_dir_contents.bin
Running suite(s): SDO_Read_Dir_Contents
100%: Checks: 27, Failures: 0, Errors: 0
./dist/check_sfc_is_close_on_exec.bin
Running suite(s): SFC_Is_Close_On_Exec
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfl_create_hard_link.bin
Running suite(s): SFL_Create_Hard_Link
100%: Checks: 14, Failures: 0, Errors: 0
./dist/check_sfl_create_sym_link.bin
Running suite(s): SFL_Create_Sym_Link
100%: Checks: 14, Failures: 0, Errors: 0
./dist/check_sfmr_get_access_time.bin
Running suite(s): SFMR_Get_Access_Time
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_block_count.bin
Running suite(s): SFMR_Get_Block_Count
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_block_size.bin
Running suite(s): SFMR_Get_Block_Size
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_change_time.bin
Running suite(s): SFMR_Get_Change_Time
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_container_device_id.bin
Running suite(s): SFMR_Get_Container_Device_ID
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_file_device_id.bin
Running suite(s): SFMR_Get_File_Device_ID
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_file_perms.bin
Running suite(s): SFMR_Get_File_Perms
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_file_type.bin
Running suite(s): SFMR_Get_File_Type
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_group.bin
Running suite(s): SFMR_Get_Group
100%: Checks: 12, Failures: 0, Errors: 0
./dist/check_sfmr_get_hard_link_num.bin
Running suite(s): SFMR_Get_Hard_Link_Num
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_mod_time.bin
Running suite(s): SFMR_Get_Mod_Time
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_owner.bin
Running suite(s): SFMR_Get_Owner
100%: Checks: 12, Failures: 0, Errors: 0
./dist/check_sfmr_get_serial_num.bin
Running suite(s): SFMR_Get_Serial_Num
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_size.bin
Running suite(s): SFMR_Get_Size
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_block_device.bin
Running suite(s): SFMR_Is_Block_Device
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_character_device.bin
Running suite(s): SFMR_Is_Character_Device
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_directory.bin
Running suite(s): SFMR_Is_Directory
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_named_pipe.bin
Running suite(s): SFMR_Is_Named_Pipe
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_regular_file.bin
Running suite(s): SFMR_Is_Regular_File
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_socket.bin
Running suite(s): SFMR_Is_Socket
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_sym_link.bin
Running suite(s): SFMR_Is_Sym_Link
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmw_add_mode.bin
Running suite(s): SFMW_Add_Mode
100%: Checks: 16, Failures: 0, Errors: 0
./dist/check_sfmw_remove_mode.bin
Running suite(s): SFMW_Remove_Mode
100%: Checks: 16, Failures: 0, Errors: 0
./dist/check_sfmw_set_atime.bin
Running suite(s): SFMW_Set_Atime
100%: Checks: 24, Failures: 0, Errors: 0
./dist/check_sfmw_set_atime_now.bin
Running suite(s): SFMW_Set_Atime_Now
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmw_set_mode.bin
Running suite(s): SFMW_Set_Mode
100%: Checks: 16, Failures: 0, Errors: 0
./dist/check_sfmw_set_mtime.bin
Running suite(s): SFMW_Set_Mtime
100%: Checks: 24, Failures: 0, Errors: 0
./dist/check_sfmw_set_mtime_now.bin
Running suite(s): SFMW_Set_Mtime_Now
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmw_set_ownership.bin
Running suite(s): SFMW_Set_Ownership
100%: Checks: 20, Failures: 0, Errors: 0
./dist/check_sfmw_set_times.bin
Running suite(s): SFMW_Set_Times
100%: Checks: 24, Failures: 0, Errors: 0
./dist/check_sfmw_set_times_now.bin
Running suite(s): SFMW_Set_Times_Now
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sv_validate_pathname.bin
Running suite(s): SV_Validate_Pathname
100%: Checks: 11, Failures: 0, Errors: 0

RELEASING
Releasing libsketchyidea.so.1.0.0

==77754== Memcheck, a memory error detector
==77754== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==77754== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==77754== Command: code/dist/check_sdo_create_dir.bin
==77754== 
Running suite(s): SDO_Create_Dir
100%: Checks: 20, Failures: 0, Errors: 0
==77754== 
==77754== HEAP SUMMARY:
==77754==     in use at exit: 0 bytes in 0 blocks
==77754==   total heap usage: 1,142 allocs, 1,142 frees, 535,512 bytes allocated
==77754== 
==77754== All heap blocks were freed -- no leaks are possible
==77754== 
==77754== For lists of detected and suppressed errors, rerun with: -s
==77754== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==77841== Memcheck, a memory error detector
==77841== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==77841== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==77841== Command: code/dist/check_sdo_delete_dir.bin
==77841== 
Running suite(s): SDO_Delete_Dir
100%: Checks: 11, Failures: 0, Errors: 0
==77841== 
==77841== HEAP SUMMARY:
==77841==     in use at exit: 0 bytes in 0 blocks
==77841==   total heap usage: 379 allocs, 379 frees, 174,636 bytes allocated
==77841== 
==77841== All heap blocks were freed -- no leaks are possible
==77841== 
==77841== For lists of detected and suppressed errors, rerun with: -s
==77841== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==77847== Memcheck, a memory error detector
==77847== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==77847== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==77847== Command: code/dist/check_sdo_destroy_dir.bin
==77847== 
Running suite(s): SDO_Destroy_Dir
100%: Checks: 16, Failures: 0, Errors: 0
==77847== 
==77847== HEAP SUMMARY:
==77847==     in use at exit: 0 bytes in 0 blocks
==77847==   total heap usage: 1,100 allocs, 1,100 frees, 1,556,088 bytes allocated
==77847== 
==77847== All heap blocks were freed -- no leaks are possible
==77847== 
==77847== For lists of detected and suppressed errors, rerun with: -s
==77847== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==77879== Memcheck, a memory error detector
==77879== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==77879== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==77879== Command: code/dist/check_sdo_read_dir_contents.bin
==77879== 
Running suite(s): SDO_Read_Dir_Contents
100%: Checks: 27, Failures: 0, Errors: 0
==77879== 
==77879== HEAP SUMMARY:
==77879==     in use at exit: 0 bytes in 0 blocks
==77879==   total heap usage: 4,188 allocs, 4,188 frees, 2,665,204 bytes allocated
==77879== 
==77879== All heap blocks were freed -- no leaks are possible
==77879== 
==77879== For lists of detected and suppressed errors, rerun with: -s
==77879== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78073== Memcheck, a memory error detector
==78073== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78073== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78073== Command: code/dist/check_sfc_is_close_on_exec.bin
==78073== 
Running suite(s): SFC_Is_Close_On_Exec
100%: Checks: 11, Failures: 0, Errors: 0
==78073== 
==78073== HEAP SUMMARY:
==78073==     in use at exit: 0 bytes in 0 blocks
==78073==   total heap usage: 1,293 allocs, 1,293 frees, 380,239 bytes allocated
==78073== 
==78073== All heap blocks were freed -- no leaks are possible
==78073== 
==78073== For lists of detected and suppressed errors, rerun with: -s
==78073== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78099== Memcheck, a memory error detector
==78099== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78099== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78099== Command: code/dist/check_sfl_create_hard_link.bin
==78099== 
Running suite(s): SFL_Create_Hard_Link
100%: Checks: 14, Failures: 0, Errors: 0
==78099== 
==78099== HEAP SUMMARY:
==78099==     in use at exit: 0 bytes in 0 blocks
==78099==   total heap usage: 1,537 allocs, 1,537 frees, 477,742 bytes allocated
==78099== 
==78099== All heap blocks were freed -- no leaks are possible
==78099== 
==78099== For lists of detected and suppressed errors, rerun with: -s
==78099== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78130== Memcheck, a memory error detector
==78130== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78130== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78130== Command: code/dist/check_sfl_create_sym_link.bin
==78130== 
Running suite(s): SFL_Create_Sym_Link
100%: Checks: 14, Failures: 0, Errors: 0
==78130== 
==78130== HEAP SUMMARY:
==78130==     in use at exit: 0 bytes in 0 blocks
==78130==   total heap usage: 1,513 allocs, 1,513 frees, 476,691 bytes allocated
==78130== 
==78130== All heap blocks were freed -- no leaks are possible
==78130== 
==78130== For lists of detected and suppressed errors, rerun with: -s
==78130== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78162== Memcheck, a memory error detector
==78162== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78162== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78162== Command: code/dist/check_sfmr_get_access_time.bin
==78162== 
Running suite(s): SFMR_Get_Access_Time
100%: Checks: 11, Failures: 0, Errors: 0
==78162== 
==78162== HEAP SUMMARY:
==78162==     in use at exit: 0 bytes in 0 blocks
==78162==   total heap usage: 1,256 allocs, 1,256 frees, 410,552 bytes allocated
==78162== 
==78162== All heap blocks were freed -- no leaks are possible
==78162== 
==78162== For lists of detected and suppressed errors, rerun with: -s
==78162== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78201== Memcheck, a memory error detector
==78201== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78201== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78201== Command: code/dist/check_sfmr_get_block_count.bin
==78201== 
Running suite(s): SFMR_Get_Block_Count
100%: Checks: 11, Failures: 0, Errors: 0
==78201== 
==78201== HEAP SUMMARY:
==78201==     in use at exit: 0 bytes in 0 blocks
==78201==   total heap usage: 403 allocs, 403 frees, 195,701 bytes allocated
==78201== 
==78201== All heap blocks were freed -- no leaks are possible
==78201== 
==78201== For lists of detected and suppressed errors, rerun with: -s
==78201== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78218== Memcheck, a memory error detector
==78218== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78218== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78218== Command: code/dist/check_sfmr_get_block_size.bin
==78218== 
Running suite(s): SFMR_Get_Block_Size
100%: Checks: 11, Failures: 0, Errors: 0
==78218== 
==78218== HEAP SUMMARY:
==78218==     in use at exit: 0 bytes in 0 blocks
==78218==   total heap usage: 395 allocs, 395 frees, 194,992 bytes allocated
==78218== 
==78218== All heap blocks were freed -- no leaks are possible
==78218== 
==78218== For lists of detected and suppressed errors, rerun with: -s
==78218== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78235== Memcheck, a memory error detector
==78235== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78235== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78235== Command: code/dist/check_sfmr_get_change_time.bin
==78235== 
Running suite(s): SFMR_Get_Change_Time
100%: Checks: 11, Failures: 0, Errors: 0
==78235== 
==78235== HEAP SUMMARY:
==78235==     in use at exit: 0 bytes in 0 blocks
==78235==   total heap usage: 375 allocs, 375 frees, 194,672 bytes allocated
==78235== 
==78235== All heap blocks were freed -- no leaks are possible
==78235== 
==78235== For lists of detected and suppressed errors, rerun with: -s
==78235== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78252== Memcheck, a memory error detector
==78252== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78252== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78252== Command: code/dist/check_sfmr_get_container_device_id.bin
==78252== 
Running suite(s): SFMR_Get_Container_Device_ID
100%: Checks: 11, Failures: 0, Errors: 0
==78252== 
==78252== HEAP SUMMARY:
==78252==     in use at exit: 0 bytes in 0 blocks
==78252==   total heap usage: 318 allocs, 318 frees, 162,147 bytes allocated
==78252== 
==78252== All heap blocks were freed -- no leaks are possible
==78252== 
==78252== For lists of detected and suppressed errors, rerun with: -s
==78252== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78255== Memcheck, a memory error detector
==78255== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78255== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78255== Command: code/dist/check_sfmr_get_file_device_id.bin
==78255== 
Running suite(s): SFMR_Get_File_Device_ID
100%: Checks: 11, Failures: 0, Errors: 0
==78255== 
==78255== HEAP SUMMARY:
==78255==     in use at exit: 0 bytes in 0 blocks
==78255==   total heap usage: 403 allocs, 403 frees, 196,340 bytes allocated
==78255== 
==78255== All heap blocks were freed -- no leaks are possible
==78255== 
==78255== For lists of detected and suppressed errors, rerun with: -s
==78255== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78271== Memcheck, a memory error detector
==78271== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78271== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78271== Command: code/dist/check_sfmr_get_file_perms.bin
==78271== 
Running suite(s): SFMR_Get_File_Perms
100%: Checks: 11, Failures: 0, Errors: 0
==78271== 
==78271== HEAP SUMMARY:
==78271==     in use at exit: 0 bytes in 0 blocks
==78271==   total heap usage: 403 allocs, 403 frees, 195,488 bytes allocated
==78271== 
==78271== All heap blocks were freed -- no leaks are possible
==78271== 
==78271== For lists of detected and suppressed errors, rerun with: -s
==78271== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78288== Memcheck, a memory error detector
==78288== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78288== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78288== Command: code/dist/check_sfmr_get_file_type.bin
==78288== 
Running suite(s): SFMR_Get_File_Type
100%: Checks: 11, Failures: 0, Errors: 0
==78288== 
==78288== HEAP SUMMARY:
==78288==     in use at exit: 0 bytes in 0 blocks
==78288==   total heap usage: 301 allocs, 301 frees, 154,685 bytes allocated
==78288== 
==78288== All heap blocks were freed -- no leaks are possible
==78288== 
==78288== For lists of detected and suppressed errors, rerun with: -s
==78288== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78291== Memcheck, a memory error detector
==78291== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78291== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78291== Command: code/dist/check_sfmr_get_group.bin
==78291== 
Running suite(s): SFMR_Get_Group
100%: Checks: 12, Failures: 0, Errors: 0
==78291== 
==78291== HEAP SUMMARY:
==78291==     in use at exit: 0 bytes in 0 blocks
==78291==   total heap usage: 442 allocs, 442 frees, 213,025 bytes allocated
==78291== 
==78291== All heap blocks were freed -- no leaks are possible
==78291== 
==78291== For lists of detected and suppressed errors, rerun with: -s
==78291== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78309== Memcheck, a memory error detector
==78309== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78309== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78309== Command: code/dist/check_sfmr_get_hard_link_num.bin
==78309== 
Running suite(s): SFMR_Get_Hard_Link_Num
100%: Checks: 11, Failures: 0, Errors: 0
==78309== 
==78309== HEAP SUMMARY:
==78309==     in use at exit: 0 bytes in 0 blocks
==78309==   total heap usage: 403 allocs, 403 frees, 196,127 bytes allocated
==78309== 
==78309== All heap blocks were freed -- no leaks are possible
==78309== 
==78309== For lists of detected and suppressed errors, rerun with: -s
==78309== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78326== Memcheck, a memory error detector
==78326== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78326== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78326== Command: code/dist/check_sfmr_get_mod_time.bin
==78326== 
Running suite(s): SFMR_Get_Mod_Time
100%: Checks: 11, Failures: 0, Errors: 0
==78326== 
==78326== HEAP SUMMARY:
==78326==     in use at exit: 0 bytes in 0 blocks
==78326==   total heap usage: 375 allocs, 375 frees, 194,117 bytes allocated
==78326== 
==78326== All heap blocks were freed -- no leaks are possible
==78326== 
==78326== For lists of detected and suppressed errors, rerun with: -s
==78326== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78343== Memcheck, a memory error detector
==78343== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78343== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78343== Command: code/dist/check_sfmr_get_owner.bin
==78343== 
Running suite(s): SFMR_Get_Owner
100%: Checks: 12, Failures: 0, Errors: 0
==78343== 
==78343== HEAP SUMMARY:
==78343==     in use at exit: 0 bytes in 0 blocks
==78343==   total heap usage: 442 allocs, 442 frees, 213,025 bytes allocated
==78343== 
==78343== All heap blocks were freed -- no leaks are possible
==78343== 
==78343== For lists of detected and suppressed errors, rerun with: -s
==78343== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78362== Memcheck, a memory error detector
==78362== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78362== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78362== Command: code/dist/check_sfmr_get_serial_num.bin
==78362== 
Running suite(s): SFMR_Get_Serial_Num
100%: Checks: 11, Failures: 0, Errors: 0
==78362== 
==78362== HEAP SUMMARY:
==78362==     in use at exit: 0 bytes in 0 blocks
==78362==   total heap usage: 1,284 allocs, 1,284 frees, 411,396 bytes allocated
==78362== 
==78362== All heap blocks were freed -- no leaks are possible
==78362== 
==78362== For lists of detected and suppressed errors, rerun with: -s
==78362== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78404== Memcheck, a memory error detector
==78404== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78404== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78404== Command: code/dist/check_sfmr_get_size.bin
==78404== 
Running suite(s): SFMR_Get_Size
100%: Checks: 11, Failures: 0, Errors: 0
==78404== 
==78404== HEAP SUMMARY:
==78404==     in use at exit: 0 bytes in 0 blocks
==78404==   total heap usage: 403 allocs, 403 frees, 194,210 bytes allocated
==78404== 
==78404== All heap blocks were freed -- no leaks are possible
==78404== 
==78404== For lists of detected and suppressed errors, rerun with: -s
==78404== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78421== Memcheck, a memory error detector
==78421== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78421== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78421== Command: code/dist/check_sfmr_is_block_device.bin
==78421== 
Running suite(s): SFMR_Is_Block_Device
100%: Checks: 11, Failures: 0, Errors: 0
==78421== 
==78421== HEAP SUMMARY:
==78421==     in use at exit: 0 bytes in 0 blocks
==78421==   total heap usage: 301 allocs, 301 frees, 154,997 bytes allocated
==78421== 
==78421== All heap blocks were freed -- no leaks are possible
==78421== 
==78421== For lists of detected and suppressed errors, rerun with: -s
==78421== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78424== Memcheck, a memory error detector
==78424== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78424== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78424== Command: code/dist/check_sfmr_is_character_device.bin
==78424== 
Running suite(s): SFMR_Is_Character_Device
100%: Checks: 11, Failures: 0, Errors: 0
==78424== 
==78424== HEAP SUMMARY:
==78424==     in use at exit: 0 bytes in 0 blocks
==78424==   total heap usage: 301 allocs, 301 frees, 155,621 bytes allocated
==78424== 
==78424== All heap blocks were freed -- no leaks are possible
==78424== 
==78424== For lists of detected and suppressed errors, rerun with: -s
==78424== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78426== Memcheck, a memory error detector
==78426== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78426== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78426== Command: code/dist/check_sfmr_is_directory.bin
==78426== 
Running suite(s): SFMR_Is_Directory
100%: Checks: 11, Failures: 0, Errors: 0
==78426== 
==78426== HEAP SUMMARY:
==78426==     in use at exit: 0 bytes in 0 blocks
==78426==   total heap usage: 301 allocs, 301 frees, 154,529 bytes allocated
==78426== 
==78426== All heap blocks were freed -- no leaks are possible
==78426== 
==78426== For lists of detected and suppressed errors, rerun with: -s
==78426== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78428== Memcheck, a memory error detector
==78428== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78428== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78428== Command: code/dist/check_sfmr_is_named_pipe.bin
==78428== 
Running suite(s): SFMR_Is_Named_Pipe
100%: Checks: 11, Failures: 0, Errors: 0
==78428== 
==78428== HEAP SUMMARY:
==78428==     in use at exit: 0 bytes in 0 blocks
==78428==   total heap usage: 301 allocs, 301 frees, 154,685 bytes allocated
==78428== 
==78428== All heap blocks were freed -- no leaks are possible
==78428== 
==78428== For lists of detected and suppressed errors, rerun with: -s
==78428== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78430== Memcheck, a memory error detector
==78430== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78430== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78430== Command: code/dist/check_sfmr_is_regular_file.bin
==78430== 
Running suite(s): SFMR_Is_Regular_File
100%: Checks: 11, Failures: 0, Errors: 0
==78430== 
==78430== HEAP SUMMARY:
==78430==     in use at exit: 0 bytes in 0 blocks
==78430==   total heap usage: 301 allocs, 301 frees, 154,997 bytes allocated
==78430== 
==78430== All heap blocks were freed -- no leaks are possible
==78430== 
==78430== For lists of detected and suppressed errors, rerun with: -s
==78430== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78432== Memcheck, a memory error detector
==78432== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78432== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78432== Command: code/dist/check_sfmr_is_socket.bin
==78432== 
Running suite(s): SFMR_Is_Socket
100%: Checks: 11, Failures: 0, Errors: 0
==78432== 
==78432== HEAP SUMMARY:
==78432==     in use at exit: 0 bytes in 0 blocks
==78432==   total heap usage: 301 allocs, 301 frees, 154,061 bytes allocated
==78432== 
==78432== All heap blocks were freed -- no leaks are possible
==78432== 
==78432== For lists of detected and suppressed errors, rerun with: -s
==78432== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78434== Memcheck, a memory error detector
==78434== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78434== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78434== Command: code/dist/check_sfmr_is_sym_link.bin
==78434== 
Running suite(s): SFMR_Is_Sym_Link
100%: Checks: 11, Failures: 0, Errors: 0
==78434== 
==78434== HEAP SUMMARY:
==78434==     in use at exit: 0 bytes in 0 blocks
==78434==   total heap usage: 301 allocs, 301 frees, 154,373 bytes allocated
==78434== 
==78434== All heap blocks were freed -- no leaks are possible
==78434== 
==78434== For lists of detected and suppressed errors, rerun with: -s
==78434== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78436== Memcheck, a memory error detector
==78436== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78436== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78436== Command: code/dist/check_sfmw_add_mode.bin
==78436== 
Running suite(s): SFMW_Add_Mode
100%: Checks: 16, Failures: 0, Errors: 0
==78436== 
==78436== HEAP SUMMARY:
==78436==     in use at exit: 0 bytes in 0 blocks
==78436==   total heap usage: 5,321 allocs, 5,321 frees, 1,417,570 bytes allocated
==78436== 
==78436== All heap blocks were freed -- no leaks are possible
==78436== 
==78436== For lists of detected and suppressed errors, rerun with: -s
==78436== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==78822== Memcheck, a memory error detector
==78822== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==78822== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==78822== Command: code/dist/check_sfmw_remove_mode.bin
==78822== 
Running suite(s): SFMW_Remove_Mode
100%: Checks: 16, Failures: 0, Errors: 0
==78822== 
==78822== HEAP SUMMARY:
==78822==     in use at exit: 0 bytes in 0 blocks
==78822==   total heap usage: 5,321 allocs, 5,321 frees, 1,429,537 bytes allocated
==78822== 
==78822== All heap blocks were freed -- no leaks are possible
==78822== 
==78822== For lists of detected and suppressed errors, rerun with: -s
==78822== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==79205== Memcheck, a memory error detector
==79205== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==79205== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==79205== Command: code/dist/check_sfmw_set_atime.bin
==79205== 
Running suite(s): SFMW_Set_Atime
100%: Checks: 24, Failures: 0, Errors: 0
==79205== 
==79205== HEAP SUMMARY:
==79205==     in use at exit: 0 bytes in 0 blocks
==79205==   total heap usage: 2,628 allocs, 2,628 frees, 706,269 bytes allocated
==79205== 
==79205== All heap blocks were freed -- no leaks are possible
==79205== 
==79205== For lists of detected and suppressed errors, rerun with: -s
==79205== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==79211== Memcheck, a memory error detector
==79211== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==79211== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==79211== Command: code/dist/check_sfmw_set_atime_now.bin
==79211== 
Running suite(s): SFMW_Set_Atime_Now
100%: Checks: 11, Failures: 0, Errors: 0
==79211== 
==79211== HEAP SUMMARY:
==79211==     in use at exit: 0 bytes in 0 blocks
==79211==   total heap usage: 738 allocs, 738 frees, 315,349 bytes allocated
==79211== 
==79211== All heap blocks were freed -- no leaks are possible
==79211== 
==79211== For lists of detected and suppressed errors, rerun with: -s
==79211== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==79214== Memcheck, a memory error detector
==79214== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==79214== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==79214== Command: code/dist/check_sfmw_set_mode.bin
==79214== 
Running suite(s): SFMW_Set_Mode
100%: Checks: 16, Failures: 0, Errors: 0
==79214== 
==79214== HEAP SUMMARY:
==79214==     in use at exit: 0 bytes in 0 blocks
==79214==   total heap usage: 5,225 allocs, 5,225 frees, 1,359,890 bytes allocated
==79214== 
==79214== All heap blocks were freed -- no leaks are possible
==79214== 
==79214== For lists of detected and suppressed errors, rerun with: -s
==79214== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==79576== Memcheck, a memory error detector
==79576== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==79576== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==79576== Command: code/dist/check_sfmw_set_mtime.bin
==79576== 
Running suite(s): SFMW_Set_Mtime
100%: Checks: 24, Failures: 0, Errors: 0
==79576== 
==79576== HEAP SUMMARY:
==79576==     in use at exit: 0 bytes in 0 blocks
==79576==   total heap usage: 2,628 allocs, 2,628 frees, 706,269 bytes allocated
==79576== 
==79576== All heap blocks were freed -- no leaks are possible
==79576== 
==79576== For lists of detected and suppressed errors, rerun with: -s
==79576== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==79581== Memcheck, a memory error detector
==79581== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==79581== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==79581== Command: code/dist/check_sfmw_set_mtime_now.bin
==79581== 
Running suite(s): SFMW_Set_Mtime_Now
100%: Checks: 11, Failures: 0, Errors: 0
==79581== 
==79581== HEAP SUMMARY:
==79581==     in use at exit: 0 bytes in 0 blocks
==79581==   total heap usage: 738 allocs, 738 frees, 315,349 bytes allocated
==79581== 
==79581== All heap blocks were freed -- no leaks are possible
==79581== 
==79581== For lists of detected and suppressed errors, rerun with: -s
==79581== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==79584== Memcheck, a memory error detector
==79584== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==79584== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==79584== Command: code/dist/check_sfmw_set_ownership.bin
==79584== 
Running suite(s): SFMW_Set_Ownership
100%: Checks: 20, Failures: 0, Errors: 0
==79584== 
==79584== HEAP SUMMARY:
==79584==     in use at exit: 0 bytes in 0 blocks
==79584==   total heap usage: 7,287 allocs, 7,287 frees, 1,517,442 bytes allocated
==79584== 
==79584== All heap blocks were freed -- no leaks are possible
==79584== 
==79584== For lists of detected and suppressed errors, rerun with: -s
==79584== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==79875== Memcheck, a memory error detector
==79875== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==79875== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==79875== Command: code/dist/check_sfmw_set_times.bin
==79875== 
Running suite(s): SFMW_Set_Times
100%: Checks: 24, Failures: 0, Errors: 0
==79875== 
==79875== HEAP SUMMARY:
==79875==     in use at exit: 0 bytes in 0 blocks
==79875==   total heap usage: 2,748 allocs, 2,748 frees, 709,959 bytes allocated
==79875== 
==79875== All heap blocks were freed -- no leaks are possible
==79875== 
==79875== For lists of detected and suppressed errors, rerun with: -s
==79875== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==79881== Memcheck, a memory error detector
==79881== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==79881== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==79881== Command: code/dist/check_sfmw_set_times_now.bin
==79881== 
Running suite(s): SFMW_Set_Times_Now
100%: Checks: 11, Failures: 0, Errors: 0
==79881== 
==79881== HEAP SUMMARY:
==79881==     in use at exit: 0 bytes in 0 blocks
==79881==   total heap usage: 802 allocs, 802 frees, 317,573 bytes allocated
==79881== 
==79881== All heap blocks were freed -- no leaks are possible
==79881== 
==79881== For lists of detected and suppressed errors, rerun with: -s
==79881== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==79885== Memcheck, a memory error detector
==79885== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==79885== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==79885== Command: code/dist/check_sv_validate_pathname.bin
==79885== 
Running suite(s): SV_Validate_Pathname
100%: Checks: 11, Failures: 0, Errors: 0
==79885== 
==79885== HEAP SUMMARY:
==79885==     in use at exit: 0 bytes in 0 blocks
==79885==   total heap usage: 1,160 allocs, 1,160 frees, 375,356 bytes allocated
==79885== 
==79885== All heap blocks were freed -- no leaks are possible
==79885== 
==79885== For lists of detected and suppressed errors, rerun with: -s
==79885== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

TOTAL CHECK UNIT TESTS: 530

*** Manual Test Code ***
The full command is './code/dist/test_sm_handle_ext_read_queue_ptr.bin ./code/test/test_input/regular_file.txt'
Command output:
[INFO] CHILD - Received value 0x7f08c653e000 inside signal number 12 (User defined signal 2) code -1 (SI_QUEUE: See sigqueue(3)) from UID 1000 at PID 82499
[INFO] CHILD - The contents of the mapped memory:

Tester's Creed


This is my test input. There are many like it, but this one is mine.

My test input is my best friend. It is my life. I must master it as I must master my life.

Without me, my test input is useless. Without my test input, I am useless. I must test my production code true. I must test my production code better than my adversary who is trying to reverse engineer my code. I must fix my code before they exploit it.

I will ...

My test input and I know that what counts in testing is not the number of test cases, the number of statements we test, nor our code coverage. We know that it is the requirements that count. We will trace ...

My test code is human, even as I am human, because it is my life. Thus, I will learn my test code as a brother. I will learn its weaknesses, its strength, its classes, its functions, its decorators, its execution, and its flow control. I will keep my test code clean and DRY, even as I like to be clean and dry. We will become part of each other. We will ...

Before Guido, I swear this creed. My test code and I are the defenders of my production code. We are the masters of our adversaries. We are the saviors of my career.

So be it, until delivery is ours and there are no bugs, but operationally accepted capabilities!


[INFO] Blocking signal 12: User defined signal 2
[INFO] ./code/dist/test_sm_handle_ext_read_queue_ptr.bin now temporarily blocking signal 12.
[INFO] ./code/dist/test_sm_handle_ext_read_queue_ptr.bin is now handling signal 12: User defined signal 2.
[INFO] Blocking signal 12: User defined signal 2
[INFO] ./code/dist/test_sm_handle_ext_read_queue_ptr.bin now temporarily blocking signal 12.
[INFO] ./code/dist/test_sm_handle_ext_read_queue_ptr.bin is now handling signal 12: User defined signal 2.
[INFO] PARENT - The child has finished


*** Manual Test Code (with Valgrind) ***
The full command is 'valgrind --error-exitcode=1 --leak-check=full --show-leak-kinds=all ./code/dist/test_sm_handle_ext_read_queue_ptr.bin ./code/test/test_input/regular_file.txt'
Command output:
==82501== Memcheck, a memory error detector
==82501== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==82501== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==82501== Command: ./code/dist/test_sm_handle_ext_read_queue_ptr.bin ./code/test/test_input/regular_file.txt
==82501== 
[INFO] CHILD - Received value 0x4037000 inside signal number 12 (User defined signal 2) code -1 (SI_QUEUE: See sigqueue(3)) from UID 1000 at PID 82501
[INFO] CHILD - The contents of the mapped memory:

Tester's Creed


This is my test input. There are many like it, but this one is mine.

My test input is my best friend. It is my life. I must master it as I must master my life.

Without me, my test input is useless. Without my test input, I am useless. I must test my production code true. I must test my production code better than my adversary who is trying to reverse engineer my code. I must fix my code before they exploit it.

I will ...

My test input and I know that what counts in testing is not the number of test cases, the number of statements we test, nor our code coverage. We know that it is the requirements that count. We will trace ...

My test code is human, even as I am human, because it is my life. Thus, I will learn my test code as a brother. I will learn its weaknesses, its strength, its classes, its functions, its decorators, its execution, and its flow control. I will keep my test code clean and DRY, even as I like to be clean and dry. We will become part of each other. We will ...

Before Guido, I swear this creed. My test code and I are the defenders of my production code. We are the masters of our adversaries. We are the saviors of my career.

So be it, until delivery is ours and there are no bugs, but operationally accepted capabilities!


[INFO] Blocking signal 12: User defined signal 2
[INFO] ./code/dist/test_sm_handle_ext_read_queue_ptr.bin now temporarily blocking signal 12.
[INFO] ./code/dist/test_sm_handle_ext_read_queue_ptr.bin is now handling signal 12: User defined signal 2.
==82503== 
==82503== HEAP SUMMARY:
==82503==     in use at exit: 0 bytes in 0 blocks
==82503==   total heap usage: 2 allocs, 2 frees, 4,122 bytes allocated
==82503== 
==82503== All heap blocks were freed -- no leaks are possible
==82503== 
==82503== For lists of detected and suppressed errors, rerun with: -s
==82503== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[INFO] Blocking signal 12: User defined signal 2
[INFO] ./code/dist/test_sm_handle_ext_read_queue_ptr.bin now temporarily blocking signal 12.
[INFO] ./code/dist/test_sm_handle_ext_read_queue_ptr.bin is now handling signal 12: User defined signal 2.
[INFO] PARENT - The child has finished
==82501== 
==82501== HEAP SUMMARY:
==82501==     in use at exit: 0 bytes in 0 blocks
==82501==   total heap usage: 4 allocs, 4 frees, 9,946 bytes allocated
==82501== 
==82501== All heap blocks were freed -- no leaks are possible
==82501== 
==82501== For lists of detected and suppressed errors, rerun with: -s
==82501== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)



