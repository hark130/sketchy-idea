Fri Jun  6 18:36:32 UTC 2025

VALIDATING
    Validating gcc
        [✓] gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    Validating glibc
        [✓] ldd (Ubuntu GLIBC 2.35-0ubuntu3.9) 2.35
    Validating Check
        [✓] Check unit test version: (0) (15) (2)

CLEANING
    Cleaning dist/ directory

COMPILING
    Compiling: src/devops_code.c
    Compiling: src/skid_assembly.c
    Compiling: src/skid_dir_operations.c
    Compiling: src/skid_file_control.c
    Compiling: src/skid_file_descriptors.c
    Compiling: src/skid_file_link.c
    Compiling: src/skid_file_metadata_read.c
    Compiling: src/skid_file_metadata_write.c
    Compiling: src/skid_file_operations.c
    Compiling: src/skid_memory.c
    Compiling: src/skid_network.c
    Compiling: src/skid_signal_handlers.c
    Compiling: src/skid_signals.c
    Compiling: src/skid_time.c
    Compiling: src/skid_validation.c
    Compiling: src/unit_test_code.c
    Compiling manual test object code: dist/test_devops_code_create_path_tree.o
    Linking manual test binary: dist/test_devops_code_create_path_tree.bin
    Compiling manual test object code: dist/test_devops_code_get_compatible_gid.o
    Linking manual test binary: dist/test_devops_code_get_compatible_gid.bin
    Compiling manual test object code: dist/test_feature_test_macros.o
    Linking manual test binary: dist/test_feature_test_macros.bin
    Statically compiling bespoke binary: dist/test_misc_glibc_vs_musl-static_glibc.bin
    Statically compiling bespoke binary: dist/test_misc_glibc_vs_musl-static_musl.bin
    Compiling manual test object code: dist/test_misc_setjmp_longjmp.o
    Linking manual test binary: dist/test_misc_setjmp_longjmp.bin
    Compiling manual test object code: dist/test_sa_read_cpu_tsc.o
    Linking manual test binary: dist/test_sa_read_cpu_tsc.bin
    Compiling manual test object code: dist/test_sdo_read_dir_contents.o
    Linking manual test binary: dist/test_sdo_read_dir_contents.bin
    Compiling manual test object code: dist/test_sfc_lock_and_write_fd.o
    Linking manual test binary: dist/test_sfc_lock_and_write_fd.bin
    Compiling manual test object code: dist/test_sfc_read_locked_fd.o
    Linking manual test binary: dist/test_sfc_read_locked_fd.bin
    Compiling manual test object code: dist/test_sfc_write_locked_fd.o
    Linking manual test binary: dist/test_sfc_write_locked_fd.bin
    Compiling manual test object code: dist/test_sfl_create_hard_link.o
    Linking manual test binary: dist/test_sfl_create_hard_link.bin
    Compiling manual test object code: dist/test_sfl_create_sym_link.o
    Linking manual test binary: dist/test_sfl_create_sym_link.bin
    Compiling manual test object code: dist/test_sfmr_file_metadata.o
    Linking manual test binary: dist/test_sfmr_file_metadata.bin
    Compiling manual test object code: dist/test_sfmr_get_block_size.o
    Linking manual test binary: dist/test_sfmr_get_block_size.bin
    Compiling manual test object code: dist/test_sfmr_get_container_device_id.o
    Linking manual test binary: dist/test_sfmr_get_container_device_id.bin
    Compiling manual test object code: dist/test_sfmr_get_file_device_id.o
    Linking manual test binary: dist/test_sfmr_get_file_device_id.bin
    Compiling manual test object code: dist/test_sfmr_get_file_perms.o
    Linking manual test binary: dist/test_sfmr_get_file_perms.bin
    Compiling manual test object code: dist/test_sfmr_get_file_times.o
    Linking manual test binary: dist/test_sfmr_get_file_times.bin
    Compiling manual test object code: dist/test_sfmr_is_block_device.o
    Linking manual test binary: dist/test_sfmr_is_block_device.bin
    Compiling manual test object code: dist/test_sfmr_is_character_device.o
    Linking manual test binary: dist/test_sfmr_is_character_device.bin
    Compiling manual test object code: dist/test_sfmr_is_named_pipe.o
    Linking manual test binary: dist/test_sfmr_is_named_pipe.bin
    Compiling manual test object code: dist/test_sfmr_is_regular_file.o
    Linking manual test binary: dist/test_sfmr_is_regular_file.bin
    Compiling manual test object code: dist/test_sfmr_is_symbolic_link.o
    Linking manual test binary: dist/test_sfmr_is_symbolic_link.bin
    Compiling manual test object code: dist/test_sfmw_set_atime_now.o
    Linking manual test binary: dist/test_sfmw_set_atime_now.bin
    Compiling manual test object code: dist/test_sfmw_set_ownership.o
    Linking manual test binary: dist/test_sfmw_set_ownership.bin
    Compiling manual test object code: dist/test_sfmw_set_times.o
    Linking manual test binary: dist/test_sfmw_set_times.bin
    Compiling manual test object code: dist/test_sn_multi_sniffer.o
    Linking manual test binary: dist/test_sn_multi_sniffer.bin
    Compiling manual test object code: dist/test_sn_simple_dgram_client.o
    Linking manual test binary: dist/test_sn_simple_dgram_client.bin
    Compiling manual test object code: dist/test_sn_simple_dgram_server.o
    Linking manual test binary: dist/test_sn_simple_dgram_server.bin
    Compiling manual test object code: dist/test_sn_simple_sniffer.o
    Linking manual test binary: dist/test_sn_simple_sniffer.bin
    Compiling manual test object code: dist/test_sn_simple_stream_client.o
    Linking manual test binary: dist/test_sn_simple_stream_client.bin
    Compiling manual test object code: dist/test_sn_simple_stream_server.o
    Linking manual test binary: dist/test_sn_simple_stream_server.bin
    Compiling manual test object code: dist/test_ss_block_unblock.o
    Linking manual test binary: dist/test_ss_block_unblock.bin
    Compiling manual test object code: dist/test_ssh_handle_ext_async_client.o
    Linking manual test binary: dist/test_ssh_handle_ext_async_client.bin
    Compiling manual test object code: dist/test_ssh_handle_ext_async_server.o
    Linking manual test binary: dist/test_ssh_handle_ext_async_server.bin
    Compiling manual test object code: dist/test_ssh_handle_ext_read_queue_int.o
    Linking manual test binary: dist/test_ssh_handle_ext_read_queue_int.bin
    Compiling manual test object code: dist/test_ssh_handle_ext_sending_process.o
    Linking manual test binary: dist/test_ssh_handle_ext_sending_process.bin
    Compiling manual test object code: dist/test_ssh_handle_ext_signal_code.o
    Linking manual test binary: dist/test_ssh_handle_ext_signal_code.bin
    Compiling manual test object code: dist/test_ssh_handle_interruptions.o
    Linking manual test binary: dist/test_ssh_handle_interruptions.bin
    Compiling manual test object code: dist/test_ssh_handle_signal_number.o
    Linking manual test binary: dist/test_ssh_handle_signal_number.bin
    Compiling bespoke binary: dist/redirect_bin_output.bin
    Compiling Check unit test code: test/check_sdo_create_dir.c
    Linking Check unit test binary: dist/check_sdo_create_dir.bin
    Compiling Check unit test code: test/check_sdo_delete_dir.c
    Linking Check unit test binary: dist/check_sdo_delete_dir.bin
    Compiling Check unit test code: test/check_sdo_destroy_dir.c
    Linking Check unit test binary: dist/check_sdo_destroy_dir.bin
    Compiling Check unit test code: test/check_sdo_read_dir_contents.c
    Linking Check unit test binary: dist/check_sdo_read_dir_contents.bin
    Compiling Check unit test code: test/check_sfc_is_close_on_exec.c
    Linking Check unit test binary: dist/check_sfc_is_close_on_exec.bin
    Compiling Check unit test code: test/check_sfl_create_hard_link.c
    Linking Check unit test binary: dist/check_sfl_create_hard_link.bin
    Compiling Check unit test code: test/check_sfl_create_sym_link.c
    Linking Check unit test binary: dist/check_sfl_create_sym_link.bin
    Compiling Check unit test code: test/check_sfmr_get_access_time.c
    Linking Check unit test binary: dist/check_sfmr_get_access_time.bin
    Compiling Check unit test code: test/check_sfmr_get_block_count.c
    Linking Check unit test binary: dist/check_sfmr_get_block_count.bin
    Compiling Check unit test code: test/check_sfmr_get_block_size.c
    Linking Check unit test binary: dist/check_sfmr_get_block_size.bin
    Compiling Check unit test code: test/check_sfmr_get_change_time.c
    Linking Check unit test binary: dist/check_sfmr_get_change_time.bin
    Compiling Check unit test code: test/check_sfmr_get_container_device_id.c
    Linking Check unit test binary: dist/check_sfmr_get_container_device_id.bin
    Compiling Check unit test code: test/check_sfmr_get_file_device_id.c
    Linking Check unit test binary: dist/check_sfmr_get_file_device_id.bin
    Compiling Check unit test code: test/check_sfmr_get_file_perms.c
    Linking Check unit test binary: dist/check_sfmr_get_file_perms.bin
    Compiling Check unit test code: test/check_sfmr_get_file_type.c
    Linking Check unit test binary: dist/check_sfmr_get_file_type.bin
    Compiling Check unit test code: test/check_sfmr_get_group.c
    Linking Check unit test binary: dist/check_sfmr_get_group.bin
    Compiling Check unit test code: test/check_sfmr_get_hard_link_num.c
    Linking Check unit test binary: dist/check_sfmr_get_hard_link_num.bin
    Compiling Check unit test code: test/check_sfmr_get_mod_time.c
    Linking Check unit test binary: dist/check_sfmr_get_mod_time.bin
    Compiling Check unit test code: test/check_sfmr_get_owner.c
    Linking Check unit test binary: dist/check_sfmr_get_owner.bin
    Compiling Check unit test code: test/check_sfmr_get_serial_num.c
    Linking Check unit test binary: dist/check_sfmr_get_serial_num.bin
    Compiling Check unit test code: test/check_sfmr_get_size.c
    Linking Check unit test binary: dist/check_sfmr_get_size.bin
    Compiling Check unit test code: test/check_sfmr_is_block_device.c
    Linking Check unit test binary: dist/check_sfmr_is_block_device.bin
    Compiling Check unit test code: test/check_sfmr_is_character_device.c
    Linking Check unit test binary: dist/check_sfmr_is_character_device.bin
    Compiling Check unit test code: test/check_sfmr_is_directory.c
    Linking Check unit test binary: dist/check_sfmr_is_directory.bin
    Compiling Check unit test code: test/check_sfmr_is_named_pipe.c
    Linking Check unit test binary: dist/check_sfmr_is_named_pipe.bin
    Compiling Check unit test code: test/check_sfmr_is_regular_file.c
    Linking Check unit test binary: dist/check_sfmr_is_regular_file.bin
    Compiling Check unit test code: test/check_sfmr_is_socket.c
    Linking Check unit test binary: dist/check_sfmr_is_socket.bin
    Compiling Check unit test code: test/check_sfmr_is_sym_link.c
    Linking Check unit test binary: dist/check_sfmr_is_sym_link.bin
    Compiling Check unit test code: test/check_sfmw_add_mode.c
    Linking Check unit test binary: dist/check_sfmw_add_mode.bin
    Compiling Check unit test code: test/check_sfmw_remove_mode.c
    Linking Check unit test binary: dist/check_sfmw_remove_mode.bin
    Compiling Check unit test code: test/check_sfmw_set_atime.c
    Linking Check unit test binary: dist/check_sfmw_set_atime.bin
    Compiling Check unit test code: test/check_sfmw_set_atime_now.c
    Linking Check unit test binary: dist/check_sfmw_set_atime_now.bin
    Compiling Check unit test code: test/check_sfmw_set_mode.c
    Linking Check unit test binary: dist/check_sfmw_set_mode.bin
    Compiling Check unit test code: test/check_sfmw_set_mtime.c
    Linking Check unit test binary: dist/check_sfmw_set_mtime.bin
    Compiling Check unit test code: test/check_sfmw_set_mtime_now.c
    Linking Check unit test binary: dist/check_sfmw_set_mtime_now.bin
    Compiling Check unit test code: test/check_sfmw_set_ownership.c
    Linking Check unit test binary: dist/check_sfmw_set_ownership.bin
    Compiling Check unit test code: test/check_sfmw_set_times.c
    Linking Check unit test binary: dist/check_sfmw_set_times.bin
    Compiling Check unit test code: test/check_sfmw_set_times_now.c
    Linking Check unit test binary: dist/check_sfmw_set_times_now.bin

RUNNING TEST CASES
./dist/check_sdo_create_dir.bin
Running suite(s): SDO_Create_Dir
100%: Checks: 20, Failures: 0, Errors: 0
./dist/check_sdo_delete_dir.bin
Running suite(s): SDO_Delete_Dir
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sdo_destroy_dir.bin
Running suite(s): SDO_Destroy_Dir
100%: Checks: 16, Failures: 0, Errors: 0
./dist/check_sdo_read_dir_contents.bin
Running suite(s): SDO_Read_Dir_Contents
100%: Checks: 27, Failures: 0, Errors: 0
./dist/check_sfc_is_close_on_exec.bin
Running suite(s): SFC_Is_Close_On_Exec
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfl_create_hard_link.bin
Running suite(s): SFL_Create_Hard_Link
100%: Checks: 14, Failures: 0, Errors: 0
./dist/check_sfl_create_sym_link.bin
Running suite(s): SFL_Create_Sym_Link
100%: Checks: 14, Failures: 0, Errors: 0
./dist/check_sfmr_get_access_time.bin
Running suite(s): SFMR_Get_Access_Time
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_block_count.bin
Running suite(s): SFMR_Get_Block_Count
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_block_size.bin
Running suite(s): SFMR_Get_Block_Size
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_change_time.bin
Running suite(s): SFMR_Get_Change_Time
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_container_device_id.bin
Running suite(s): SFMR_Get_Container_Device_ID
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_file_device_id.bin
Running suite(s): SFMR_Get_File_Device_ID
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_file_perms.bin
Running suite(s): SFMR_Get_File_Perms
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_file_type.bin
Running suite(s): SFMR_Get_File_Type
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_group.bin
Running suite(s): SFMR_Get_Group
100%: Checks: 12, Failures: 0, Errors: 0
./dist/check_sfmr_get_hard_link_num.bin
Running suite(s): SFMR_Get_Hard_Link_Num
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_mod_time.bin
Running suite(s): SFMR_Get_Mod_Time
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_owner.bin
Running suite(s): SFMR_Get_Owner
100%: Checks: 12, Failures: 0, Errors: 0
./dist/check_sfmr_get_serial_num.bin
Running suite(s): SFMR_Get_Serial_Num
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_get_size.bin
Running suite(s): SFMR_Get_Size
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_block_device.bin
Running suite(s): SFMR_Is_Block_Device
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_character_device.bin
Running suite(s): SFMR_Is_Character_Device
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_directory.bin
Running suite(s): SFMR_Is_Directory
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_named_pipe.bin
Running suite(s): SFMR_Is_Named_Pipe
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_regular_file.bin
Running suite(s): SFMR_Is_Regular_File
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_socket.bin
Running suite(s): SFMR_Is_Socket
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmr_is_sym_link.bin
Running suite(s): SFMR_Is_Sym_Link
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmw_add_mode.bin
Running suite(s): SFMW_Add_Mode
100%: Checks: 16, Failures: 0, Errors: 0
./dist/check_sfmw_remove_mode.bin
Running suite(s): SFMW_Remove_Mode
100%: Checks: 16, Failures: 0, Errors: 0
./dist/check_sfmw_set_atime.bin
Running suite(s): SFMW_Set_Atime
100%: Checks: 24, Failures: 0, Errors: 0
./dist/check_sfmw_set_atime_now.bin
Running suite(s): SFMW_Set_Atime_Now
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmw_set_mode.bin
Running suite(s): SFMW_Set_Mode
100%: Checks: 16, Failures: 0, Errors: 0
./dist/check_sfmw_set_mtime.bin
Running suite(s): SFMW_Set_Mtime
100%: Checks: 24, Failures: 0, Errors: 0
./dist/check_sfmw_set_mtime_now.bin
Running suite(s): SFMW_Set_Mtime_Now
100%: Checks: 11, Failures: 0, Errors: 0
./dist/check_sfmw_set_ownership.bin
Running suite(s): SFMW_Set_Ownership
100%: Checks: 20, Failures: 0, Errors: 0
./dist/check_sfmw_set_times.bin
Running suite(s): SFMW_Set_Times
100%: Checks: 24, Failures: 0, Errors: 0
./dist/check_sfmw_set_times_now.bin
Running suite(s): SFMW_Set_Times_Now
100%: Checks: 11, Failures: 0, Errors: 0

==74411== Memcheck, a memory error detector
==74411== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==74411== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==74411== Command: code/dist/check_sdo_create_dir.bin
==74411== 
Running suite(s): SDO_Create_Dir
100%: Checks: 20, Failures: 0, Errors: 0
==74411== 
==74411== HEAP SUMMARY:
==74411==     in use at exit: 0 bytes in 0 blocks
==74411==   total heap usage: 1,142 allocs, 1,142 frees, 535,512 bytes allocated
==74411== 
==74411== All heap blocks were freed -- no leaks are possible
==74411== 
==74411== For lists of detected and suppressed errors, rerun with: -s
==74411== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==74494== Memcheck, a memory error detector
==74494== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==74494== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==74494== Command: code/dist/check_sdo_delete_dir.bin
==74494== 
Running suite(s): SDO_Delete_Dir
100%: Checks: 11, Failures: 0, Errors: 0
==74494== 
==74494== HEAP SUMMARY:
==74494==     in use at exit: 0 bytes in 0 blocks
==74494==   total heap usage: 379 allocs, 379 frees, 174,636 bytes allocated
==74494== 
==74494== All heap blocks were freed -- no leaks are possible
==74494== 
==74494== For lists of detected and suppressed errors, rerun with: -s
==74494== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==74499== Memcheck, a memory error detector
==74499== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==74499== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==74499== Command: code/dist/check_sdo_destroy_dir.bin
==74499== 
Running suite(s): SDO_Destroy_Dir
100%: Checks: 16, Failures: 0, Errors: 0
==74499== 
==74499== HEAP SUMMARY:
==74499==     in use at exit: 0 bytes in 0 blocks
==74499==   total heap usage: 1,100 allocs, 1,100 frees, 1,556,068 bytes allocated
==74499== 
==74499== All heap blocks were freed -- no leaks are possible
==74499== 
==74499== For lists of detected and suppressed errors, rerun with: -s
==74499== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==74528== Memcheck, a memory error detector
==74528== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==74528== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==74528== Command: code/dist/check_sdo_read_dir_contents.bin
==74528== 
Running suite(s): SDO_Read_Dir_Contents
100%: Checks: 27, Failures: 0, Errors: 0
==74528== 
==74528== HEAP SUMMARY:
==74528==     in use at exit: 0 bytes in 0 blocks
==74528==   total heap usage: 4,188 allocs, 4,188 frees, 2,665,207 bytes allocated
==74528== 
==74528== All heap blocks were freed -- no leaks are possible
==74528== 
==74528== For lists of detected and suppressed errors, rerun with: -s
==74528== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==74715== Memcheck, a memory error detector
==74715== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==74715== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==74715== Command: code/dist/check_sfc_is_close_on_exec.bin
==74715== 
Running suite(s): SFC_Is_Close_On_Exec
100%: Checks: 11, Failures: 0, Errors: 0
==74715== 
==74715== HEAP SUMMARY:
==74715==     in use at exit: 0 bytes in 0 blocks
==74715==   total heap usage: 1,293 allocs, 1,293 frees, 380,239 bytes allocated
==74715== 
==74715== All heap blocks were freed -- no leaks are possible
==74715== 
==74715== For lists of detected and suppressed errors, rerun with: -s
==74715== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==74738== Memcheck, a memory error detector
==74738== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==74738== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==74738== Command: code/dist/check_sfl_create_hard_link.bin
==74738== 
Running suite(s): SFL_Create_Hard_Link
100%: Checks: 14, Failures: 0, Errors: 0
==74738== 
==74738== HEAP SUMMARY:
==74738==     in use at exit: 0 bytes in 0 blocks
==74738==   total heap usage: 1,537 allocs, 1,537 frees, 477,742 bytes allocated
==74738== 
==74738== All heap blocks were freed -- no leaks are possible
==74738== 
==74738== For lists of detected and suppressed errors, rerun with: -s
==74738== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==74767== Memcheck, a memory error detector
==74767== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==74767== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==74767== Command: code/dist/check_sfl_create_sym_link.bin
==74767== 
Running suite(s): SFL_Create_Sym_Link
100%: Checks: 14, Failures: 0, Errors: 0
==74767== 
==74767== HEAP SUMMARY:
==74767==     in use at exit: 0 bytes in 0 blocks
==74767==   total heap usage: 1,513 allocs, 1,513 frees, 476,691 bytes allocated
==74767== 
==74767== All heap blocks were freed -- no leaks are possible
==74767== 
==74767== For lists of detected and suppressed errors, rerun with: -s
==74767== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==74796== Memcheck, a memory error detector
==74796== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==74796== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==74796== Command: code/dist/check_sfmr_get_access_time.bin
==74796== 
Running suite(s): SFMR_Get_Access_Time
100%: Checks: 11, Failures: 0, Errors: 0
==74796== 
==74796== HEAP SUMMARY:
==74796==     in use at exit: 0 bytes in 0 blocks
==74796==   total heap usage: 1,256 allocs, 1,256 frees, 410,552 bytes allocated
==74796== 
==74796== All heap blocks were freed -- no leaks are possible
==74796== 
==74796== For lists of detected and suppressed errors, rerun with: -s
==74796== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==74833== Memcheck, a memory error detector
==74833== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==74833== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==74833== Command: code/dist/check_sfmr_get_block_count.bin
==74833== 
Running suite(s): SFMR_Get_Block_Count
100%: Checks: 11, Failures: 0, Errors: 0
==74833== 
==74833== HEAP SUMMARY:
==74833==     in use at exit: 0 bytes in 0 blocks
==74833==   total heap usage: 403 allocs, 403 frees, 195,701 bytes allocated
==74833== 
==74833== All heap blocks were freed -- no leaks are possible
==74833== 
==74833== For lists of detected and suppressed errors, rerun with: -s
==74833== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==74848== Memcheck, a memory error detector
==74848== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==74848== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==74848== Command: code/dist/check_sfmr_get_block_size.bin
==74848== 
Running suite(s): SFMR_Get_Block_Size
100%: Checks: 11, Failures: 0, Errors: 0
==74848== 
==74848== HEAP SUMMARY:
==74848==     in use at exit: 0 bytes in 0 blocks
==74848==   total heap usage: 395 allocs, 395 frees, 194,992 bytes allocated
==74848== 
==74848== All heap blocks were freed -- no leaks are possible
==74848== 
==74848== For lists of detected and suppressed errors, rerun with: -s
==74848== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==74863== Memcheck, a memory error detector
==74863== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==74863== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==74863== Command: code/dist/check_sfmr_get_change_time.bin
==74863== 
Running suite(s): SFMR_Get_Change_Time
100%: Checks: 11, Failures: 0, Errors: 0
==74863== 
==74863== HEAP SUMMARY:
==74863==     in use at exit: 0 bytes in 0 blocks
==74863==   total heap usage: 375 allocs, 375 frees, 194,672 bytes allocated
==74863== 
==74863== All heap blocks were freed -- no leaks are possible
==74863== 
==74863== For lists of detected and suppressed errors, rerun with: -s
==74863== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==74878== Memcheck, a memory error detector
==74878== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==74878== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==74878== Command: code/dist/check_sfmr_get_container_device_id.bin
==74878== 
Running suite(s): SFMR_Get_Container_Device_ID
100%: Checks: 11, Failures: 0, Errors: 0
==74878== 
==74878== HEAP SUMMARY:
==74878==     in use at exit: 0 bytes in 0 blocks
==74878==   total heap usage: 318 allocs, 318 frees, 162,147 bytes allocated
==74878== 
==74878== All heap blocks were freed -- no leaks are possible
==74878== 
==74878== For lists of detected and suppressed errors, rerun with: -s
==74878== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==74879== Memcheck, a memory error detector
==74879== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==74879== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==74879== Command: code/dist/check_sfmr_get_file_device_id.bin
==74879== 
Running suite(s): SFMR_Get_File_Device_ID
100%: Checks: 11, Failures: 0, Errors: 0
==74879== 
==74879== HEAP SUMMARY:
==74879==     in use at exit: 0 bytes in 0 blocks
==74879==   total heap usage: 403 allocs, 403 frees, 196,340 bytes allocated
==74879== 
==74879== All heap blocks were freed -- no leaks are possible
==74879== 
==74879== For lists of detected and suppressed errors, rerun with: -s
==74879== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==74894== Memcheck, a memory error detector
==74894== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==74894== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==74894== Command: code/dist/check_sfmr_get_file_perms.bin
==74894== 
Running suite(s): SFMR_Get_File_Perms
100%: Checks: 11, Failures: 0, Errors: 0
==74894== 
==74894== HEAP SUMMARY:
==74894==     in use at exit: 0 bytes in 0 blocks
==74894==   total heap usage: 403 allocs, 403 frees, 195,488 bytes allocated
==74894== 
==74894== All heap blocks were freed -- no leaks are possible
==74894== 
==74894== For lists of detected and suppressed errors, rerun with: -s
==74894== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==74909== Memcheck, a memory error detector
==74909== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==74909== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==74909== Command: code/dist/check_sfmr_get_file_type.bin
==74909== 
Running suite(s): SFMR_Get_File_Type
100%: Checks: 11, Failures: 0, Errors: 0
==74909== 
==74909== HEAP SUMMARY:
==74909==     in use at exit: 0 bytes in 0 blocks
==74909==   total heap usage: 301 allocs, 301 frees, 154,685 bytes allocated
==74909== 
==74909== All heap blocks were freed -- no leaks are possible
==74909== 
==74909== For lists of detected and suppressed errors, rerun with: -s
==74909== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==74910== Memcheck, a memory error detector
==74910== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==74910== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==74910== Command: code/dist/check_sfmr_get_group.bin
==74910== 
Running suite(s): SFMR_Get_Group
100%: Checks: 12, Failures: 0, Errors: 0
==74910== 
==74910== HEAP SUMMARY:
==74910==     in use at exit: 0 bytes in 0 blocks
==74910==   total heap usage: 442 allocs, 442 frees, 213,025 bytes allocated
==74910== 
==74910== All heap blocks were freed -- no leaks are possible
==74910== 
==74910== For lists of detected and suppressed errors, rerun with: -s
==74910== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==74927== Memcheck, a memory error detector
==74927== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==74927== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==74927== Command: code/dist/check_sfmr_get_hard_link_num.bin
==74927== 
Running suite(s): SFMR_Get_Hard_Link_Num
100%: Checks: 11, Failures: 0, Errors: 0
==74927== 
==74927== HEAP SUMMARY:
==74927==     in use at exit: 0 bytes in 0 blocks
==74927==   total heap usage: 403 allocs, 403 frees, 196,127 bytes allocated
==74927== 
==74927== All heap blocks were freed -- no leaks are possible
==74927== 
==74927== For lists of detected and suppressed errors, rerun with: -s
==74927== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==74942== Memcheck, a memory error detector
==74942== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==74942== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==74942== Command: code/dist/check_sfmr_get_mod_time.bin
==74942== 
Running suite(s): SFMR_Get_Mod_Time
100%: Checks: 11, Failures: 0, Errors: 0
==74942== 
==74942== HEAP SUMMARY:
==74942==     in use at exit: 0 bytes in 0 blocks
==74942==   total heap usage: 375 allocs, 375 frees, 194,117 bytes allocated
==74942== 
==74942== All heap blocks were freed -- no leaks are possible
==74942== 
==74942== For lists of detected and suppressed errors, rerun with: -s
==74942== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==74957== Memcheck, a memory error detector
==74957== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==74957== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==74957== Command: code/dist/check_sfmr_get_owner.bin
==74957== 
Running suite(s): SFMR_Get_Owner
100%: Checks: 12, Failures: 0, Errors: 0
==74957== 
==74957== HEAP SUMMARY:
==74957==     in use at exit: 0 bytes in 0 blocks
==74957==   total heap usage: 442 allocs, 442 frees, 213,025 bytes allocated
==74957== 
==74957== All heap blocks were freed -- no leaks are possible
==74957== 
==74957== For lists of detected and suppressed errors, rerun with: -s
==74957== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==74974== Memcheck, a memory error detector
==74974== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==74974== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==74974== Command: code/dist/check_sfmr_get_serial_num.bin
==74974== 
Running suite(s): SFMR_Get_Serial_Num
100%: Checks: 11, Failures: 0, Errors: 0
==74974== 
==74974== HEAP SUMMARY:
==74974==     in use at exit: 0 bytes in 0 blocks
==74974==   total heap usage: 1,284 allocs, 1,284 frees, 411,396 bytes allocated
==74974== 
==74974== All heap blocks were freed -- no leaks are possible
==74974== 
==74974== For lists of detected and suppressed errors, rerun with: -s
==74974== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==75011== Memcheck, a memory error detector
==75011== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==75011== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==75011== Command: code/dist/check_sfmr_get_size.bin
==75011== 
Running suite(s): SFMR_Get_Size
100%: Checks: 11, Failures: 0, Errors: 0
==75011== 
==75011== HEAP SUMMARY:
==75011==     in use at exit: 0 bytes in 0 blocks
==75011==   total heap usage: 403 allocs, 403 frees, 194,210 bytes allocated
==75011== 
==75011== All heap blocks were freed -- no leaks are possible
==75011== 
==75011== For lists of detected and suppressed errors, rerun with: -s
==75011== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==75026== Memcheck, a memory error detector
==75026== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==75026== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==75026== Command: code/dist/check_sfmr_is_block_device.bin
==75026== 
Running suite(s): SFMR_Is_Block_Device
100%: Checks: 11, Failures: 0, Errors: 0
==75026== 
==75026== HEAP SUMMARY:
==75026==     in use at exit: 0 bytes in 0 blocks
==75026==   total heap usage: 301 allocs, 301 frees, 154,997 bytes allocated
==75026== 
==75026== All heap blocks were freed -- no leaks are possible
==75026== 
==75026== For lists of detected and suppressed errors, rerun with: -s
==75026== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==75027== Memcheck, a memory error detector
==75027== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==75027== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==75027== Command: code/dist/check_sfmr_is_character_device.bin
==75027== 
Running suite(s): SFMR_Is_Character_Device
100%: Checks: 11, Failures: 0, Errors: 0
==75027== 
==75027== HEAP SUMMARY:
==75027==     in use at exit: 0 bytes in 0 blocks
==75027==   total heap usage: 301 allocs, 301 frees, 155,621 bytes allocated
==75027== 
==75027== All heap blocks were freed -- no leaks are possible
==75027== 
==75027== For lists of detected and suppressed errors, rerun with: -s
==75027== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==75028== Memcheck, a memory error detector
==75028== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==75028== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==75028== Command: code/dist/check_sfmr_is_directory.bin
==75028== 
Running suite(s): SFMR_Is_Directory
100%: Checks: 11, Failures: 0, Errors: 0
==75028== 
==75028== HEAP SUMMARY:
==75028==     in use at exit: 0 bytes in 0 blocks
==75028==   total heap usage: 301 allocs, 301 frees, 154,529 bytes allocated
==75028== 
==75028== All heap blocks were freed -- no leaks are possible
==75028== 
==75028== For lists of detected and suppressed errors, rerun with: -s
==75028== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==75029== Memcheck, a memory error detector
==75029== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==75029== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==75029== Command: code/dist/check_sfmr_is_named_pipe.bin
==75029== 
Running suite(s): SFMR_Is_Named_Pipe
100%: Checks: 11, Failures: 0, Errors: 0
==75029== 
==75029== HEAP SUMMARY:
==75029==     in use at exit: 0 bytes in 0 blocks
==75029==   total heap usage: 301 allocs, 301 frees, 154,685 bytes allocated
==75029== 
==75029== All heap blocks were freed -- no leaks are possible
==75029== 
==75029== For lists of detected and suppressed errors, rerun with: -s
==75029== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==75030== Memcheck, a memory error detector
==75030== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==75030== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==75030== Command: code/dist/check_sfmr_is_regular_file.bin
==75030== 
Running suite(s): SFMR_Is_Regular_File
100%: Checks: 11, Failures: 0, Errors: 0
==75030== 
==75030== HEAP SUMMARY:
==75030==     in use at exit: 0 bytes in 0 blocks
==75030==   total heap usage: 301 allocs, 301 frees, 154,997 bytes allocated
==75030== 
==75030== All heap blocks were freed -- no leaks are possible
==75030== 
==75030== For lists of detected and suppressed errors, rerun with: -s
==75030== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==75031== Memcheck, a memory error detector
==75031== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==75031== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==75031== Command: code/dist/check_sfmr_is_socket.bin
==75031== 
Running suite(s): SFMR_Is_Socket
100%: Checks: 11, Failures: 0, Errors: 0
==75031== 
==75031== HEAP SUMMARY:
==75031==     in use at exit: 0 bytes in 0 blocks
==75031==   total heap usage: 301 allocs, 301 frees, 154,061 bytes allocated
==75031== 
==75031== All heap blocks were freed -- no leaks are possible
==75031== 
==75031== For lists of detected and suppressed errors, rerun with: -s
==75031== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==75032== Memcheck, a memory error detector
==75032== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==75032== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==75032== Command: code/dist/check_sfmr_is_sym_link.bin
==75032== 
Running suite(s): SFMR_Is_Sym_Link
100%: Checks: 11, Failures: 0, Errors: 0
==75032== 
==75032== HEAP SUMMARY:
==75032==     in use at exit: 0 bytes in 0 blocks
==75032==   total heap usage: 301 allocs, 301 frees, 154,373 bytes allocated
==75032== 
==75032== All heap blocks were freed -- no leaks are possible
==75032== 
==75032== For lists of detected and suppressed errors, rerun with: -s
==75032== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==75033== Memcheck, a memory error detector
==75033== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==75033== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==75033== Command: code/dist/check_sfmw_add_mode.bin
==75033== 
Running suite(s): SFMW_Add_Mode
100%: Checks: 16, Failures: 0, Errors: 0
==75033== 
==75033== HEAP SUMMARY:
==75033==     in use at exit: 0 bytes in 0 blocks
==75033==   total heap usage: 5,321 allocs, 5,321 frees, 1,417,570 bytes allocated
==75033== 
==75033== All heap blocks were freed -- no leaks are possible
==75033== 
==75033== For lists of detected and suppressed errors, rerun with: -s
==75033== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==75402== Memcheck, a memory error detector
==75402== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==75402== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==75402== Command: code/dist/check_sfmw_remove_mode.bin
==75402== 
Running suite(s): SFMW_Remove_Mode
100%: Checks: 16, Failures: 0, Errors: 0
==75402== 
==75402== HEAP SUMMARY:
==75402==     in use at exit: 0 bytes in 0 blocks
==75402==   total heap usage: 5,321 allocs, 5,321 frees, 1,429,537 bytes allocated
==75402== 
==75402== All heap blocks were freed -- no leaks are possible
==75402== 
==75402== For lists of detected and suppressed errors, rerun with: -s
==75402== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==75771== Memcheck, a memory error detector
==75771== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==75771== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==75771== Command: code/dist/check_sfmw_set_atime.bin
==75771== 
Running suite(s): SFMW_Set_Atime
100%: Checks: 24, Failures: 0, Errors: 0
==75771== 
==75771== HEAP SUMMARY:
==75771==     in use at exit: 0 bytes in 0 blocks
==75771==   total heap usage: 2,628 allocs, 2,628 frees, 706,269 bytes allocated
==75771== 
==75771== All heap blocks were freed -- no leaks are possible
==75771== 
==75771== For lists of detected and suppressed errors, rerun with: -s
==75771== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==75772== Memcheck, a memory error detector
==75772== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==75772== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==75772== Command: code/dist/check_sfmw_set_atime_now.bin
==75772== 
Running suite(s): SFMW_Set_Atime_Now
100%: Checks: 11, Failures: 0, Errors: 0
==75772== 
==75772== HEAP SUMMARY:
==75772==     in use at exit: 0 bytes in 0 blocks
==75772==   total heap usage: 738 allocs, 738 frees, 315,349 bytes allocated
==75772== 
==75772== All heap blocks were freed -- no leaks are possible
==75772== 
==75772== For lists of detected and suppressed errors, rerun with: -s
==75772== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==75773== Memcheck, a memory error detector
==75773== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==75773== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==75773== Command: code/dist/check_sfmw_set_mode.bin
==75773== 
Running suite(s): SFMW_Set_Mode
100%: Checks: 16, Failures: 0, Errors: 0
==75773== 
==75773== HEAP SUMMARY:
==75773==     in use at exit: 0 bytes in 0 blocks
==75773==   total heap usage: 5,225 allocs, 5,225 frees, 1,359,890 bytes allocated
==75773== 
==75773== All heap blocks were freed -- no leaks are possible
==75773== 
==75773== For lists of detected and suppressed errors, rerun with: -s
==75773== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==76118== Memcheck, a memory error detector
==76118== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==76118== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==76118== Command: code/dist/check_sfmw_set_mtime.bin
==76118== 
Running suite(s): SFMW_Set_Mtime
100%: Checks: 24, Failures: 0, Errors: 0
==76118== 
==76118== HEAP SUMMARY:
==76118==     in use at exit: 0 bytes in 0 blocks
==76118==   total heap usage: 2,628 allocs, 2,628 frees, 706,269 bytes allocated
==76118== 
==76118== All heap blocks were freed -- no leaks are possible
==76118== 
==76118== For lists of detected and suppressed errors, rerun with: -s
==76118== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==76119== Memcheck, a memory error detector
==76119== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==76119== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==76119== Command: code/dist/check_sfmw_set_mtime_now.bin
==76119== 
Running suite(s): SFMW_Set_Mtime_Now
100%: Checks: 11, Failures: 0, Errors: 0
==76119== 
==76119== HEAP SUMMARY:
==76119==     in use at exit: 0 bytes in 0 blocks
==76119==   total heap usage: 738 allocs, 738 frees, 315,349 bytes allocated
==76119== 
==76119== All heap blocks were freed -- no leaks are possible
==76119== 
==76119== For lists of detected and suppressed errors, rerun with: -s
==76119== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==76120== Memcheck, a memory error detector
==76120== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==76120== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==76120== Command: code/dist/check_sfmw_set_ownership.bin
==76120== 
Running suite(s): SFMW_Set_Ownership
100%: Checks: 20, Failures: 0, Errors: 0
==76120== 
==76120== HEAP SUMMARY:
==76120==     in use at exit: 0 bytes in 0 blocks
==76120==   total heap usage: 7,287 allocs, 7,287 frees, 1,517,442 bytes allocated
==76120== 
==76120== All heap blocks were freed -- no leaks are possible
==76120== 
==76120== For lists of detected and suppressed errors, rerun with: -s
==76120== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==76393== Memcheck, a memory error detector
==76393== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==76393== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==76393== Command: code/dist/check_sfmw_set_times.bin
==76393== 
Running suite(s): SFMW_Set_Times
100%: Checks: 24, Failures: 0, Errors: 0
==76393== 
==76393== HEAP SUMMARY:
==76393==     in use at exit: 0 bytes in 0 blocks
==76393==   total heap usage: 2,748 allocs, 2,748 frees, 709,959 bytes allocated
==76393== 
==76393== All heap blocks were freed -- no leaks are possible
==76393== 
==76393== For lists of detected and suppressed errors, rerun with: -s
==76393== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
==76394== Memcheck, a memory error detector
==76394== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==76394== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==76394== Command: code/dist/check_sfmw_set_times_now.bin
==76394== 
Running suite(s): SFMW_Set_Times_Now
100%: Checks: 11, Failures: 0, Errors: 0
==76394== 
==76394== HEAP SUMMARY:
==76394==     in use at exit: 0 bytes in 0 blocks
==76394==   total heap usage: 802 allocs, 802 frees, 317,573 bytes allocated
==76394== 
==76394== All heap blocks were freed -- no leaks are possible
==76394== 
==76394== For lists of detected and suppressed errors, rerun with: -s
==76394== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

TOTAL CHECK UNIT TESTS: 519


*** Each of the following binaries was statically compiled using a different library ***
./code/dist/test_misc_glibc_vs_musl-static_glibc.bin was compiled with: glibc-ld.so.cache1.1
./code/dist/test_misc_glibc_vs_musl-static_musl.bin was compiled with: /build/musl-kKuXgX/musl-1.2.2

*** The musl binary is significantly smaller than the glibc binary ***
-rwxrwxr-x 1 vagrant vagrant 885K Jun  6 18:36 ./code/dist/test_misc_glibc_vs_musl-static_glibc.bin
-rwxrwxr-x 1 vagrant vagrant 51K Jun  6 18:36 ./code/dist/test_misc_glibc_vs_musl-static_musl.bin

*** The musl binary is less complex than the glibc binary ***
Compare the number of program headers:
./code/dist/test_misc_glibc_vs_musl-static_glibc.bin - There are 10 program headers
./code/dist/test_misc_glibc_vs_musl-static_musl.bin - There are 6 program headers
Compare the number of section headers:
./code/dist/test_misc_glibc_vs_musl-static_glibc.bin - There are 38 section headers
./code/dist/test_misc_glibc_vs_musl-static_musl.bin - There are 26 section headers

*** Time Trials! ***
Compare the time elapsed:
./code/dist/test_misc_glibc_vs_musl-static_glibc.bin -        0.116153986 seconds time elapsed
./code/dist/test_misc_glibc_vs_musl-static_musl.bin -        0.246144172 seconds time elapsed
Compare the peformance:
The full command is 'sudo perf record -o ./code/test/test_output/glibc_perf.data ./code/dist/test_misc_glibc_vs_musl-static_glibc.bin 10000000 > /dev/null 2>&1'
Command output:


The full command is 'sudo perf record -o ./code/test/test_output/musl_perf.data ./code/dist/test_misc_glibc_vs_musl-static_musl.bin 10000000 > /dev/null 2>&1'
Command output:


The full command is 'sudo perf diff ./code/test/test_output/glibc_perf.data ./code/test/test_output/musl_perf.data'
Command output:
# Event 'cpu-clock:pppH'
#
# Baseline  Delta Abs  Shared Object                             Symbol                       
# ........  .........  ........................................  .............................
#
              +40.00%  test_misc_glibc_vs_musl-static_musl.bin   [.] memcpy
              +37.50%  test_misc_glibc_vs_musl-static_musl.bin   [.] sieve_it
              +13.75%  test_misc_glibc_vs_musl-static_musl.bin   [.] printf_core
               +2.50%  test_misc_glibc_vs_musl-static_musl.bin   [.] __fwritex
               +1.25%  test_misc_glibc_vs_musl-static_musl.bin   [.] vfprintf
               +0.62%  [kernel.kallsyms]                         [k] _copy_from_user
               +0.62%  [kernel.kallsyms]                         [k] _raw_spin_lock
               +0.62%  [kernel.kallsyms]                         [k] copy_user_generic_string
               +0.62%  [kernel.kallsyms]                         [k] do_anonymous_page
               +0.62%  [kernel.kallsyms]                         [k] do_user_addr_fault
               +0.62%  [kernel.kallsyms]                         [k] finish_task_switch.isra.0
               +0.62%  [kernel.kallsyms]                         [k] rmqueue
               +0.62%  test_misc_glibc_vs_musl-static_musl.bin   [.] pop_arg
    91.67%             test_misc_glibc_vs_musl-static_glibc.bin  [.] sieve_it
     1.67%             [kernel.kallsyms]                         [k] clear_page_rep
     1.67%             test_misc_glibc_vs_musl-static_glibc.bin  [.] __libc_cleanup_push_defer
     1.67%             test_misc_glibc_vs_musl-static_glibc.bin  [.] __memcpy_ssse3
     1.67%             test_misc_glibc_vs_musl-static_glibc.bin  [.] __vfprintf_internal
     1.67%             test_misc_glibc_vs_musl-static_glibc.bin  [.] main


